(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

native component Writer
import FlatString.FlatString
import Stream.{...}
export Writer

private language="java"
private package="com.sun.fortress.interpreter.glue.prim"

stdOut: Writer = OutWriter()
stdErr: Writer = ErrWriter()

private OutWriter(): Writer =  builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.Writer$outputWriter")
private ErrWriter(): Writer = builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.Writer$errorWriter")

object Writer(fileName: String) extends { WriteStream }
    getter asString(): String = "Writer on " self.fileName.asExprString
    getter fileName(): String =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.Writer$fileName")
    write(s:FlatString):() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.Writer$write")
    write(c:Char):() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.Writer$write")
    flush():() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.Writer$flush")
    close():() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.Writer$close")
    write(s: String): () = do
        buff = BufferedWriter(self, |s|)
        s.writeOn(buff)
        buff.flush()
    end
end Writer

object BufferedWriter(under: WriteStream, size: ZZ32) extends { WriteStream }
    getter asString(): String = "BufferedWriter on " under.asString
    write(s: String): () = s.writeOn(self)
    write(s: FlatString):() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.BufferedWriter$write")
    write(c: Char):() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.BufferedWriter$write")
    flush():() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.BufferedWriter$flush")
    close():() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.BufferedWriter$close")
end BufferedWriter

end
