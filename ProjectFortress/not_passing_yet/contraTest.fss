(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component contraTest
export Executable

trait ThingOf[\T\] extends ThingOf[\S\] where [\S\]{ T extends S }
end

trait A extends Object end

trait B extends A end

f(x:ThingOf[\A\]) = do
  println("PASS: f(ThingOf[A]) called")
end

g(x:ThingOf[\A\]) = do
  println("FAIL: g(ThingOf[A]) called")
end

g(x:ThingOf[\B\]) = do
  println("PASS: g(ThingOf[B]) called")
end

object ToBo() extends ThingOf[\B\]
end

run():() = do

  tob:ThingOf[\B\] = ToBo()

  f(tob)

  g(tob)

end

end
