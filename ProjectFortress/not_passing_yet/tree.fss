(*******************************************************************************
    Copyright 2008,2010, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component tree
export Executable

(** Tree-based function representation, from ORNL code. *)

even(z:ZZ32):Boolean = (z REM 2 = 0)

(** Start with 1-D tensors, from tensor.py *)

(** Part 1: vectors. *)

(* Elementwise product *)
opr BOXDOT[\ nat n \](a : Array1[\RR64,0,n\], b : RR64[n]) : RR64[n] = do
  res = vector[\RR64,n\]()
  for i <- 0#n do
    res[i] := a[i] b[i]
  end
  res
end

(* This should be done by unpasting and pasting, but we need to
   be working with arrays in order to pull that off. *)
split[\nat n\](v:RR64[2 n]):(RR64[n], RR64[n]) =
  (v.subarray[\0,n,0\](),v.subarray[\0,n,n\]())

merge[\nat n\](u:RR64[n],v:RR64[n]):RR64[2 n] = do
  r = vector[\RR64,2 n\]()
  for i <- 0#n do
    r[i] := u[i]
    r[i+n] := v[i]
  end
  r
end

(** Part 3: Constants for wavelet transform *)

(* Trick to let us typecase on nat parameters.  This is somewhat problematic. *)
value object I[\nat k\]()
end

hgVal[\nat k\]():RR64[2 k,2 k] =
  typecase I[\k\]() of
    I[\1\]=> [ (7.07106781186547462 10^(-1)) (7.07106781186547462 10^(-1))
               (7.07106781186547462 10^(-1)) (-7.07106781186547462 10^(-1)) ]
    I[\2\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1))
               (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (-7.07106781186547462 10^(-1))
               (3.53553390593273731 10^(-1)) (6.12372435695794470 10^(-1)) (-3.53553390593273731 10^(-1)) (6.12372435695794470 10^(-1)) ]
    I[\3\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1))
               (2.35702260395515839 10^(-1)) (4.08248290463863017 10^(-1)) (-5.27046276694729920 10^(-1)) (-2.35702260395515839 10^(-1)) (4.08248290463863017 10^(-1)) (5.27046276694729920 10^(-1))
               (0.00000000000000000 10^(00)) (1.76776695296636865 10^(-1)) (6.84653196881457649 10^(-1)) (0.00000000000000000 10^(00)) (-1.76776695296636865 10^(-1)) (6.84653196881457649 10^(-1))
               (2.63523138347364960 10^(-1)) (4.56435464587638395 10^(-1)) (4.71404520791031678 10^(-1)) (-2.63523138347364960 10^(-1)) (4.56435464587638395 10^(-1)) (-4.71404520791031678 10^(-1)) ]
    I[\4\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00))
               (2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (-5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (-2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2))
               (0.00000000000000000 10^(00)) (1.53392997769474099 10^(-1)) (5.94088525786004573 10^(-1)) (-3.51467511677403643 10^(-1)) (0.00000000000000000 10^(00)) (-1.53392997769474099 10^(-1)) (5.94088525786004573 10^(-1)) (3.51467511677403643 10^(-1))
               (1.54303349962091912 10^(-1)) (2.67261241912424397 10^(-1)) (1.72516389835588563 10^(-1)) (-6.12372435695794470 10^(-1)) (-1.54303349962091912 10^(-1)) (2.67261241912424397 10^(-1)) (-1.72516389835588563 10^(-1)) (-6.12372435695794470 10^(-1))
               (0.00000000000000000 10^(00)) (8.78668779193509109 10^(-2)) (3.40306954864886324 10^(-1)) (6.13571991077896395 10^(-1)) (0.00000000000000000 10^(00)) (-8.78668779193509109 10^(-2)) (3.40306954864886324 10^(-1)) (-6.13571991077896395 10^(-1))
               (2.15645487294485683 10^(-1)) (3.73508940416998003 10^(-1)) (4.43622131141014231 10^(-1)) (3.42326598440728824 10^(-1)) (-2.15645487294485683 10^(-1)) (3.73508940416998003 10^(-1)) (-4.43622131141014231 10^(-1)) (3.42326598440728824 10^(-1)) ]
    I[\5\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (-5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (-2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (-3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (-1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2))
               (1.46647115021353303 10^(-1)) (2.54000254000381009 10^(-1)) (1.63956458945988232 10^(-1)) (-5.81987695247377923 10^(-1)) (2.19970672532029926 10^(-1)) (-1.46647115021353303 10^(-1)) (2.54000254000381009 10^(-1)) (-1.63956458945988232 10^(-1)) (-5.81987695247377923 10^(-1)) (-2.19970672532029926 10^(-1))
               (0.00000000000000000 10^(00)) (7.02439358686270526 10^(-2)) (2.72053593791254378 10^(-1)) (4.29197537639476046 10^(-1)) (-4.86664263392287633 10^(-1)) (0.00000000000000000 10^(00)) (-7.02439358686270526 10^(-2)) (2.72053593791254378 10^(-1)) (-4.29197537639476046 10^(-1)) (-4.86664263392287633 10^(-1))
               (1.22012412152227842 10^(-1)) (2.11331697001692936 10^(-1)) (2.08908333645301647 10^(-1)) (-5.53396284716417136 10^(-2)) (-6.27492405354314609 10^(-1)) (-1.22012412152227842 10^(-1)) (2.11331697001692936 10^(-1)) (-2.08908333645301647 10^(-1)) (-5.53396284716417136 10^(-2)) (6.27492405354314609 10^(-1))
               (0.00000000000000000 10^(00)) (5.36496922049345057 10^(-2)) (2.07784364438865221 10^(-1)) (4.39024599178919062 10^(-1)) (5.11081959901581784 10^(-1)) (0.00000000000000000 10^(00)) (-5.36496922049345057 10^(-2)) (2.07784364438865221 10^(-1)) (-4.39024599178919062 10^(-1)) (5.11081959901581784 10^(-1))
               (1.84174088668055735 10^(-1)) (3.18998879010767955 10^(-1)) (3.95016566365811783 10^(-1)) (3.87834176035668388 10^(-1)) (2.40553911729705472 10^(-1)) (-1.84174088668055735 10^(-1)) (3.18998879010767955 10^(-1)) (-3.95016566365811783 10^(-1)) (3.87834176035668388 10^(-1)) (-2.40553911729705472 10^(-1)) ]
    I[\6\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (-5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (-3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00))
               (-1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (-1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (-2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2))
               (0.00000000000000000 10^(00)) (6.90065559342354223 10^(-2)) (2.67261241912424397 10^(-1)) (4.21637021355783903 10^(-1)) (-4.78091443733757449 10^(-1)) (1.32137494528681981 10^(-1)) (0.00000000000000000 10^(00)) (-6.90065559342354223 10^(-2)) (2.67261241912424397 10^(-1)) (-4.21637021355783903 10^(-1)) (-4.78091443733757449 10^(-1)) (-1.32137494528681981 10^(-1))
               (1.07622738385727293 10^(-1)) (1.86408050933772967 10^(-1)) (1.82895336805923264 10^(-1)) (-5.69486002368798858 10^(-2)) (-5.38113691928636451 10^(-1)) (3.56944242136036816 10^(-1)) (-1.07622738385727293 10^(-1)) (1.86408050933772967 10^(-1)) (-1.82895336805923264 10^(-1)) (-5.69486002368798858 10^(-2)) (5.38113691928636451 10^(-1)) (3.56944242136036816 10^(-1))
               (0.00000000000000000 10^(00)) (4.17814244489654665 10^(-2)) (1.61818761071666650 10^(-1)) (3.19724575109042120 10^(-1)) (2.21973542660274664 10^(-1)) (-5.66191613825598794 10^(-1)) (0.00000000000000000 10^(00)) (-4.17814244489654665 10^(-2)) (1.61818761071666650 10^(-1)) (-3.19724575109042120 10^(-1)) (2.21973542660274664 10^(-1)) (5.66191613825598794 10^(-1))
               (1.05568077133336241 10^(-1)) (1.82849273252288558 10^(-1)) (2.04676750730998752 10^(-1)) (9.36564731418126489 10^(-2)) (-2.45278210958604637 10^(-1)) (-5.87023011762966229 10^(-1)) (-1.05568077133336241 10^(-1)) (1.82849273252288558 10^(-1)) (-2.04676750730998752 10^(-1)) (9.36564731418126489 10^(-2)) (2.45278210958604637 10^(-1)) (-5.87023011762966229 10^(-1))
               (0.00000000000000000 10^(00)) (3.61235077077327743 10^(-2)) (1.39905743758644285 10^(-1)) (3.11370427776249681 10^(-1)) (4.69258130230493342 10^(-1)) (4.02450914986221098 10^(-1)) (0.00000000000000000 10^(00)) (-3.61235077077327743 10^(-2)) (1.39905743758644285 10^(-1)) (-3.11370427776249681 10^(-1)) (4.69258130230493342 10^(-1)) (-4.02450914986221098 10^(-1))
               (1.61557581910374198 10^(-1)) (2.79825940216738678 10^(-1)) (3.52652456017037375 10^(-1)) (3.76555328895631147 10^(-1)) (3.19268554727644260 10^(-1)) (1.65850868000944340 10^(-1)) (-1.61557581910374198 10^(-1)) (2.79825940216738678 10^(-1)) (-3.52652456017037375 10^(-1)) (3.76555328895631147 10^(-1)) (-3.19268554727644260 10^(-1)) (1.65850868000944340 10^(-1)) ]
    I[\7\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (-5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (-3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (-1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (-2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00)) (1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (-4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (-1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2)) (0.00000000000000000 10^(00)) (6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2))
               (1.06980326843028148 10^(-1)) (1.85295361502449324 10^(-1)) (1.81803615137878849 10^(-1)) (-5.66086680006120252 10^(-2)) (-5.34901634215140698 10^(-1)) (3.54813604087910350 10^(-1)) (-7.71446107796869146 10^(-2)) (-1.06980326843028148 10^(-1)) (1.85295361502449324 10^(-1)) (-1.81803615137878849 10^(-1)) (-5.66086680006120252 10^(-2)) (5.34901634215140698 10^(-1)) (3.54813604087910350 10^(-1)) (7.71446107796869146 10^(-2))
               (0.00000000000000000 10^(00)) (3.95284707521047426 10^(-2)) (1.53093108923948618 10^(-1)) (3.01903682212279978 10^(-1)) (2.05395959064437306 10^(-1)) (-5.29838811967061063 10^(-1)) (2.46855220726643731 10^(-1)) (0.00000000000000000 10^(00)) (-3.95284707521047426 10^(-2)) (1.53093108923948618 10^(-1)) (-3.01903682212279978 10^(-1)) (2.05395959064437306 10^(-1)) (5.29838811967061063 10^(-1)) (2.46855220726643731 10^(-1))
               (8.64761849358180318 10^(-2)) (1.49781145953559208 10^(-1)) (1.65785918816308386 10^(-1)) (6.56248039525380994 10^(-2)) (-2.21885517531997534 10^(-1)) (-4.11325226866508298 10^(-1)) (4.68907524824438315 10^(-1)) (-8.64761849358180318 10^(-2)) (1.49781145953559208 10^(-1)) (-1.65785918816308386 10^(-1)) (6.56248039525380994 10^(-2)) (2.21885517531997534 10^(-1)) (-4.11325226866508298 10^(-1)) (-4.68907524824438315 10^(-1))
               (0.00000000000000000 10^(00)) (2.86703685130632151 10^(-2)) (1.11039859780723338 10^(-1)) (2.36848948891486638 10^(-1)) (2.90857133198612394 10^(-1)) (7.84279657250585606 10^(-3)) (-5.88295294497251042 10^(-1)) (0.00000000000000000 10^(00)) (-2.86703685130632151 10^(-2)) (1.11039859780723338 10^(-1)) (-2.36848948891486638 10^(-1)) (2.90857133198612394 10^(-1)) (-7.84279657250585606 10^(-3)) (-5.88295294497251042 10^(-1))
               (9.50931665454351344 10^(-2)) (1.64706195909302688 10^(-1)) (1.94920686522911973 10^(-1)) (1.46794852602623371 10^(-1)) (-4.81649604788955202 10^(-2)) (-3.74916788415118829 10^(-1)) (-5.11276729635545601 10^(-1)) (-9.50931665454351344 10^(-2)) (1.64706195909302688 10^(-1)) (-1.94920686522911973 10^(-1)) (1.46794852602623371 10^(-1)) (4.81649604788955202 10^(-2)) (-3.74916788415118829 10^(-1)) (5.11276729635545601 10^(-1))
               (0.00000000000000000 10^(00)) (2.58315268968977788 10^(-2)) (1.00045073478794044 10^(-1)) (2.27981341507730889 10^(-1)) (3.77817254856742446 10^(-1)) (4.49169532791078352 10^(-1)) (3.04711463781546343 10^(-1)) (0.00000000000000000 10^(00)) (-2.58315268968977788 10^(-2)) (1.00045073478794044 10^(-1)) (-2.27981341507730889 10^(-1)) (3.77817254856742446 10^(-1)) (-4.49169532791078352 10^(-1)) (3.04711463781546343 10^(-1))
               (1.44438546738283158 10^(-1)) (2.50174901522118354 10^(-1)) (3.18080857425383445 10^(-1)) (3.53197832400995226 10^(-1)) (3.37620129221579190 10^(-1)) (2.52721159802372086 10^(-1)) (1.13006849013016109 10^(-1)) (-1.44438546738283158 10^(-1)) (2.50174901522118354 10^(-1)) (-3.18080857425383445 10^(-1)) (3.53197832400995226 10^(-1)) (-3.37620129221579190 10^(-1)) (2.52721159802372086 10^(-1)) (-1.13006849013016109 10^(-1)) ]
    I[\8\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (-5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (-3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (-1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (-2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (-4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (-1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2)) (0.00000000000000000 10^(00))
               (1.06977062012727761 10^(-1)) (1.85289706650490965 10^(-1)) (1.81798066847188994 10^(-1)) (-5.66069404148024924 10^(-2)) (-5.34885310063638819 10^(-1)) (3.54802775870799780 10^(-1)) (-7.71422564770761626 10^(-2)) (5.52427172801990204 10^(-3)) (-1.06977062012727761 10^(-1)) (1.85289706650490965 10^(-1)) (-1.81798066847188994 10^(-1)) (-5.66069404148024924 10^(-2)) (5.34885310063638819 10^(-1)) (3.54802775870799780 10^(-1)) (7.71422564770761626 10^(-2)) (5.52427172801990204 10^(-3))
               (0.00000000000000000 10^(00)) (3.94514921576235855 10^(-2)) (1.52794972109508653 10^(-1)) (3.01315748485444623 10^(-1)) (2.04995966554227471 10^(-1)) (-5.28806992464035619 10^(-1)) (2.46374489558189386 10^(-1)) (-4.41081091391230876 10^(-2)) (0.00000000000000000 10^(00)) (-3.94514921576235855 10^(-2)) (1.52794972109508653 10^(-1)) (-3.01315748485444623 10^(-1)) (2.04995966554227471 10^(-1)) (5.28806992464035619 10^(-1)) (2.46374489558189386 10^(-1)) (4.41081091391230876 10^(-2))
               (8.43312289034136020 10^(-2)) (1.46065973125433374 10^(-1)) (1.61631737532109604 10^(-1)) (6.37484169813984647 10^(-2)) (-2.16851731465920683 10^(-1)) (-3.99564349117424833 10^(-1)) (4.56090854901222809 10^(-1)) (-1.63306722554063227 10^(-1)) (-8.43312289034136020 10^(-2)) (1.46065973125433374 10^(-1)) (-1.61631737532109604 10^(-1)) (6.37484169813984647 10^(-2)) (2.16851731465920683 10^(-1)) (-3.99564349117424833 10^(-1)) (-4.56090854901222809 10^(-1)) (-1.63306722554063227 10^(-1))
               (0.00000000000000000 10^(00)) (2.58430814883383597 10^(-2)) (1.00089824219015661 10^(-1)) (2.12700425618062072 10^(-1)) (2.55888324646720178 10^(-1)) (-1.03051686103246484 10^(-2)) (-4.96282756040329176 10^(-1)) (3.63580920890125281 10^(-1)) (0.00000000000000000 10^(00)) (-2.58430814883383597 10^(-2)) (1.00089824219015661 10^(-1)) (-2.12700425618062072 10^(-1)) (2.55888324646720178 10^(-1)) (1.03051686103246484 10^(-2)) (-4.96282756040329176 10^(-1)) (-3.63580920890125281 10^(-1))
               (7.42292692888545658 10^(-2)) (1.28568865817008215 10^(-1)) (1.50304516117233611 10^(-1)) (1.03644762948322117 10^(-1)) (-6.69121025632302135 10^(-2)) (-3.09991123262384927 10^(-1)) (-2.33350256358479807 10^(-1)) (5.38147107915712630 10^(-1)) (-7.42292692888545658 10^(-2)) (1.28568865817008215 10^(-1)) (-1.50304516117233611 10^(-1)) (1.03644762948322117 10^(-1)) (6.69121025632302135 10^(-2)) (-3.09991123262384927 10^(-1)) (2.33350256358479807 10^(-1)) (5.38147107915712630 10^(-1))
               (0.00000000000000000 10^(00)) (2.13434791213833602 10^(-2)) (8.26629391872434616 10^(-2)) (1.82959231101957831 10^(-1)) (2.69218188725434293 10^(-1)) (1.96827002538047469 10^(-1)) (-1.80532124571328556 10^(-1)) (-5.61628047792796514 10^(-1)) (0.00000000000000000 10^(00)) (-2.13434791213833602 10^(-2)) (8.26629391872434616 10^(-2)) (-1.82959231101957831 10^(-1)) (2.69218188725434293 10^(-1)) (-1.96827002538047469 10^(-1)) (-1.80532124571328556 10^(-1)) (5.61628047792796514 10^(-1))
               (8.71939722326492833 10^(-2)) (1.51024390020698451 10^(-1)) (1.84102234147576760 10^(-1)) (1.66389240058105320 10^(-1)) (5.20293149261530224 10^(-2)) (-1.83637591370366171 10^(-1)) (-4.40134468134723178 10^(-1)) (-4.21736491643413425 10^(-1)) (-8.71939722326492833 10^(-2)) (1.51024390020698451 10^(-1)) (-1.84102234147576760 10^(-1)) (1.66389240058105320 10^(-1)) (-5.20293149261530224 10^(-2)) (-1.83637591370366171 10^(-1)) (4.40134468134723178 10^(-1)) (-4.21736491643413425 10^(-1))
               (0.00000000000000000 10^(00)) (1.92854509208143926 10^(-2)) (7.46922302404146310 10^(-2)) (1.72371744816637279 10^(-1)) (2.99250122582078892 10^(-1)) (4.05043262634303791 10^(-1)) (4.00361235182952080 10^(-1)) (2.24582556324644078 10^(-1)) (0.00000000000000000 10^(00)) (-1.92854509208143926 10^(-2)) (7.46922302404146310 10^(-2)) (-1.72371744816637279 10^(-1)) (2.99250122582078892 10^(-1)) (-4.05043262634303791 10^(-1)) (4.00361235182952080 10^(-1)) (-2.24582556324644078 10^(-1))
               (1.30994289272089087 10^(-1)) (2.26888764520633029 10^(-1)) (2.89907908446132789 10^(-1)) (3.28805065784444794 10^(-1)) (3.33689839232842345 10^(-1)) (2.90099600883832520 10^(-1)) (1.94575209516250514 10^(-1)) (7.63964570434042811 10^(-2)) (-1.30994289272089087 10^(-1)) (2.26888764520633029 10^(-1)) (-2.89907908446132789 10^(-1)) (3.28805065784444794 10^(-1)) (-3.33689839232842345 10^(-1)) (2.90099600883832520 10^(-1)) (-1.94575209516250514 10^(-1)) (7.63964570434042811 10^(-2)) ]
    I[\9\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (-5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (-3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (-1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (-2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (-4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (-1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (1.06977062012727761 10^(-1)) (1.85289706650490965 10^(-1)) (1.81798066847188994 10^(-1)) (-5.66069404148024924 10^(-2)) (-5.34885310063638819 10^(-1)) (3.54802775870799780 10^(-1)) (-7.71422564770761626 10^(-2)) (5.52427172801990204 10^(-3)) (0.00000000000000000 10^(00)) (-1.06977062012727761 10^(-1)) (1.85289706650490965 10^(-1)) (-1.81798066847188994 10^(-1)) (-5.66069404148024924 10^(-2)) (5.34885310063638819 10^(-1)) (3.54802775870799780 10^(-1)) (7.71422564770761626 10^(-2)) (5.52427172801990204 10^(-3)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (3.94511911654768649 10^(-2)) (1.52793806371937069 10^(-1)) (3.01313449619951434 10^(-1)) (2.04994402553155097 10^(-1)) (-5.28802957971468812 10^(-1)) (2.46372609862835601 10^(-1)) (-4.41077726196727124 10^(-2)) (2.76213586400995102 10^(-3)) (0.00000000000000000 10^(00)) (-3.94511911654768649 10^(-2)) (1.52793806371937069 10^(-1)) (-3.01313449619951434 10^(-1)) (2.04994402553155097 10^(-1)) (5.28802957971468812 10^(-1)) (2.46372609862835601 10^(-1)) (4.41077726196727124 10^(-2)) (2.76213586400995102 10^(-3))
               (8.42792584469231471 10^(-2)) (1.45975957654299354 10^(-1)) (1.61532129411937286 10^(-1)) (6.37091310089995394 10^(-2)) (-2.16718093149230961 10^(-1)) (-3.99318111254050090 10^(-1)) (4.55809781682694426 10^(-1)) (-1.63206082197822067 10^(-1)) (2.48208774732423983 10^(-2)) (-8.42792584469231471 10^(-2)) (1.45975957654299354 10^(-1)) (-1.61532129411937286 10^(-1)) (6.37091310089995394 10^(-2)) (2.16718093149230961 10^(-1)) (-3.99318111254050090 10^(-1)) (-4.55809781682694426 10^(-1)) (-1.63206082197822067 10^(-1)) (-2.48208774732423983 10^(-2))
               (0.00000000000000000 10^(00)) (2.55826160045998577 10^(-2)) (9.90810457382345772 10^(-2)) (2.10543186526815251 10^(-1)) (2.53202232631380975 10^(-1)) (-1.04972100214821631 10^(-2)) (-4.90701827637742893 10^(-1)) (3.59570944408087345 10^(-1)) (-1.04397954978139834 10^(-1)) (0.00000000000000000 10^(00)) (-2.55826160045998577 10^(-2)) (9.90810457382345772 10^(-2)) (-2.10543186526815251 10^(-1)) (2.53202232631380975 10^(-1)) (1.04972100214821631 10^(-2)) (-4.90701827637742893 10^(-1)) (-3.59570944408087345 10^(-1)) (-1.04397954978139834 10^(-1))
               (6.98295820824746949 10^(-2)) (1.20948384038147491 10^(-1)) (1.41274481628820670 10^(-1)) (9.67842712489446200 10^(-2)) (-6.48168048065920765 10^(-2)) (-2.92246884167049470 10^(-1)) (-2.09939549356038924 10^(-1)) (4.95960059392540953 10^(-1)) (-2.67412021339565542 10^(-1)) (-6.98295820824746949 10^(-2)) (1.20948384038147491 10^(-1)) (-1.41274481628820670 10^(-1)) (9.67842712489446200 10^(-2)) (6.48168048065920765 10^(-2)) (-2.92246884167049470 10^(-1)) (2.09939549356038924 10^(-1)) (4.95960059392540953 10^(-1)) (2.67412021339565542 10^(-1))
               (0.00000000000000000 10^(00)) (1.85039393315955744 10^(-2)) (7.16654488705020520 10^(-2)) (1.57855884003784086 10^(-1)) (2.27349818186954933 10^(-1)) (1.48804573982203869 10^(-1)) (-1.84903565406234149 10^(-1)) (-3.88267619132195818 10^(-1)) (4.59163776792766987 10^(-1)) (0.00000000000000000 10^(00)) (-1.85039393315955744 10^(-2)) (7.16654488705020520 10^(-2)) (-1.57855884003784086 10^(-1)) (2.27349818186954933 10^(-1)) (-1.48804573982203869 10^(-1)) (-1.84903565406234149 10^(-1)) (3.88267619132195818 10^(-1)) (4.59163776792766987 10^(-1))
               (6.67803031919601692 10^(-2)) (1.15666878073329080 10^(-1)) (1.39376700703139261 10^(-1)) (1.17827382371290271 10^(-1)) (1.12588060760871606 10^(-2)) (-1.84242596995609603 10^(-1)) (-3.15833473518240371 10^(-1)) (-3.92018502414369710 10^(-2)) (5.59904227853391112 10^(-1)) (-6.67803031919601692 10^(-2)) (1.15666878073329080 10^(-1)) (-1.39376700703139261 10^(-1)) (1.17827382371290271 10^(-1)) (-1.12588060760871606 10^(-2)) (-1.84242596995609603 10^(-1)) (3.15833473518240371 10^(-1)) (-3.92018502414369710 10^(-2)) (-5.59904227853391112 10^(-1))
               (0.00000000000000000 10^(00)) (1.66416380133660273 10^(-2)) (6.44527868793789011 10^(-2)) (1.45659749318545001 10^(-1)) (2.33765216256414499 10^(-1)) (2.47288638357724272 10^(-1)) (6.37660677766828110 10^(-2)) (-3.20321912564716038 10^(-1)) (-5.01878516690173138 10^(-1)) (0.00000000000000000 10^(00)) (-1.66416380133660273 10^(-2)) (6.44527868793789011 10^(-2)) (-1.45659749318545001 10^(-1)) (2.33765216256414499 10^(-1)) (-2.47288638357724272 10^(-1)) (6.37660677766828110 10^(-2)) (3.20321912564716038 10^(-1)) (-5.01878516690173138 10^(-1))
               (8.07069192195687957 10^(-2)) (1.39788484610650271 10^(-1)) (1.73398419299368722 10^(-1)) (1.71717133489792978 10^(-1)) (1.04029695662908067 10^(-1)) (-5.79991433603740669 10^(-2)) (-2.90124027851231980 10^(-1)) (-4.51983807980708752 10^(-1)) (-3.34281908854268950 10^(-1)) (-8.07069192195687957 10^(-2)) (1.39788484610650271 10^(-1)) (-1.73398419299368722 10^(-1)) (1.71717133489792978 10^(-1)) (-1.04029695662908067 10^(-1)) (-5.79991433603740669 10^(-2)) (2.90124027851231980 10^(-1)) (-4.51983807980708752 10^(-1)) (3.34281908854268950 10^(-1))
               (0.00000000000000000 10^(00)) (1.48845960620674032 10^(-2)) (5.76477926634115512 10^(-2)) (1.34034618659144067 10^(-1)) (2.38878751987926574 10^(-1)) (3.45697430762867186 10^(-1)) (4.00168393617256923 10^(-1)) (3.39713656770383565 10^(-1)) (1.62419266616139757 10^(-1)) (0.00000000000000000 10^(00)) (-1.48845960620674032 10^(-2)) (5.76477926634115512 10^(-2)) (-1.34034618659144067 10^(-1)) (2.38878751987926574 10^(-1)) (-3.45697430762867186 10^(-1)) (4.00168393617256923 10^(-1)) (-3.39713656770383565 10^(-1)) (1.62419266616139757 10^(-1))
               (1.20131817436616412 10^(-1)) (2.08074411405808374 10^(-1)) (2.66669288884877065 10^(-1)) (3.06281134811372646 10^(-1)) (3.21622407413684697 10^(-1)) (3.02414084535261696 10^(-1)) (2.41431493954213150 10^(-1)) (1.46733530264100548 10^(-1)) (5.13575304039249891 10^(-2)) (-1.20131817436616412 10^(-1)) (2.08074411405808374 10^(-1)) (-2.66669288884877065 10^(-1)) (3.06281134811372646 10^(-1)) (-3.21622407413684697 10^(-1)) (3.02414084535261696 10^(-1)) (-2.41431493954213150 10^(-1)) (1.46733530264100548 10^(-1)) (-5.13575304039249891 10^(-2)) ]
    I[\10\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (-5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (-3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (-1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (-2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (-4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (-1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (1.06977062012727761 10^(-1)) (1.85289706650490965 10^(-1)) (1.81798066847188994 10^(-1)) (-5.66069404148024924 10^(-2)) (-5.34885310063638819 10^(-1)) (3.54802775870799780 10^(-1)) (-7.71422564770761626 10^(-2)) (5.52427172801990204 10^(-3)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-1.06977062012727761 10^(-1)) (1.85289706650490965 10^(-1)) (-1.81798066847188994 10^(-1)) (-5.66069404148024924 10^(-2)) (5.34885310063638819 10^(-1)) (3.54802775870799780 10^(-1)) (7.71422564770761626 10^(-2)) (5.52427172801990204 10^(-3)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (3.94511911654768649 10^(-2)) (1.52793806371937069 10^(-1)) (3.01313449619951434 10^(-1)) (2.04994402553155097 10^(-1)) (-5.28802957971468812 10^(-1)) (2.46372609862835601 10^(-1)) (-4.41077726196727124 10^(-2)) (2.76213586400995102 10^(-3)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-3.94511911654768649 10^(-2)) (1.52793806371937069 10^(-1)) (-3.01313449619951434 10^(-1)) (2.04994402553155097 10^(-1)) (5.28802957971468812 10^(-1)) (2.46372609862835601 10^(-1)) (4.41077726196727124 10^(-2)) (2.76213586400995102 10^(-3)) (0.00000000000000000 10^(00))
               (-8.42790976968414707 10^(-2)) (-1.45975679226990590 10^(-1)) (-1.61531821313557283 10^(-1)) (-6.37090094933597251 10^(-2)) (2.16717679791878087 10^(-1)) (3.99317349614470185 10^(-1)) (-4.55808912293701407 10^(-1)) (1.63205770906627440 10^(-1)) (-2.48208301311305356 10^(-2)) (1.38106793200497551 10^(-3)) (8.42790976968414707 10^(-2)) (-1.45975679226990590 10^(-1)) (1.61531821313557283 10^(-1)) (-6.37090094933597251 10^(-2)) (-2.16717679791878087 10^(-1)) (3.99317349614470185 10^(-1)) (4.55808912293701407 10^(-1)) (1.63205770906627440 10^(-1)) (2.48208301311305356 10^(-2)) (1.38106793200497551 10^(-3))
               (0.00000000000000000 10^(00)) (2.55777482388236804 10^(-2)) (9.90621929624502101 10^(-2)) (2.10503125146165287 10^(-1)) (2.53154054244845605 10^(-1)) (-1.04952126510928830 10^(-2)) (-4.90608458704618444 10^(-1)) (3.59502526575564585 10^(-1)) (-1.04378090520484149 10^(-1)) (1.37934117450112005 10^(-2)) (0.00000000000000000 10^(00)) (-2.55777482388236804 10^(-2)) (9.90621929624502101 10^(-2)) (-2.10503125146165287 10^(-1)) (2.53154054244845605 10^(-1)) (1.04952126510928830 10^(-2)) (-4.90608458704618444 10^(-1)) (-3.59502526575564585 10^(-1)) (-1.04378090520484149 10^(-1)) (-1.37934117450112005 10^(-2))
               (6.95493887309795999 10^(-2)) (1.20463074917414995 10^(-1)) (1.40706002805930291 10^(-1)) (9.63863928860014957 10^(-2)) (-6.45815752501953388 10^(-2)) (-2.91082595748077766 10^(-1)) (-2.08969906038936920 10^(-1)) (4.93833311205647940 10^(-1)) (-2.66276656225330699 10^(-1)) (6.49625907992928409 10^(-2)) (-6.95493887309795999 10^(-2)) (1.20463074917414995 10^(-1)) (-1.40706002805930291 10^(-1)) (9.63863928860014957 10^(-2)) (6.45815752501953388 10^(-2)) (-2.91082595748077766 10^(-1)) (2.08969906038936920 10^(-1)) (4.93833311205647940 10^(-1)) (2.66276656225330699 10^(-1)) (6.49625907992928409 10^(-2))
               (0.00000000000000000 10^(00)) (1.79676449726445531 10^(-2)) (6.95883897496197834 10^(-2)) (1.53240758123111914 10^(-1)) (2.20442842618909340 10^(-1)) (1.43367659836025091 10^(-1)) (-1.80766642629617252 10^(-1)) (-3.72354382446131060 10^(-1)) (4.42012821524356059 10^(-1)) (-1.88422019522498735 10^(-1)) (0.00000000000000000 10^(00)) (-1.79676449726445531 10^(-2)) (6.95883897496197834 10^(-2)) (-1.53240758123111914 10^(-1)) (2.20442842618909340 10^(-1)) (-1.43367659836025091 10^(-1)) (-1.80766642629617252 10^(-1)) (3.72354382446131060 10^(-1)) (4.42012821524356059 10^(-1)) (1.88422019522498735 10^(-1))
               (6.00969132163765851 10^(-2)) (1.04090907068821806 10^(-1)) (1.25226851161405861 10^(-1)) (1.04846094724564715 10^(-1)) (6.66957652297663073 10^(-3)) (-1.70442311878614111 10^(-1)) (-2.79288187446689595 10^(-1)) (-9.23284951943496857 10^(-3)) (4.63380177395335213 10^(-1)) (-3.70102128292582544 10^(-1)) (-6.00969132163765851 10^(-2)) (1.04090907068821806 10^(-1)) (-1.25226851161405861 10^(-1)) (1.04846094724564715 10^(-1)) (-6.66957652297663073 10^(-3)) (-1.70442311878614111 10^(-1)) (2.79288187446689595 10^(-1)) (-9.23284951943496857 10^(-3)) (-4.63380177395335213 10^(-1)) (-3.70102128292582544 10^(-1))
               (0.00000000000000000 10^(00)) (1.41766533894944757 10^(-2)) (5.49059424824670378 10^(-2)) (1.23443000635784256 10^(-1)) (1.94048555860884847 10^(-1)) (1.90650234799112750 10^(-1)) (1.08364519699476417 10^(-2)) (-2.91586699711520070 10^(-1)) (-2.30660137744290339 10^(-1)) (5.18844389222818947 10^(-1)) (0.00000000000000000 10^(00)) (-1.41766533894944757 10^(-2)) (5.49059424824670378 10^(-2)) (-1.23443000635784256 10^(-1)) (1.94048555860884847 10^(-1)) (-1.90650234799112750 10^(-1)) (1.08364519699476417 10^(-2)) (2.91586699711520070 10^(-1)) (-2.30660137744290339 10^(-1)) (-5.18844389222818947 10^(-1))
               (6.18257465852510429 10^(-2)) (1.07085334301532831 10^(-1)) (1.31477462842682774 10^(-1)) (1.23528959514926220 10^(-1)) (5.46716532881320327 10^(-2)) (-9.24251883137655744 10^(-2)) (-2.59903771653139770 10^(-1)) (-2.49677227887536518 10^(-1)) (1.39170988700743070 10^(-1)) (5.39792481712323080 10^(-1)) (-6.18257465852510429 10^(-2)) (1.07085334301532831 10^(-1)) (-1.31477462842682774 10^(-1)) (1.23528959514926220 10^(-1)) (-5.46716532881320327 10^(-2)) (-9.24251883137655744 10^(-2)) (2.59903771653139770 10^(-1)) (-2.49677227887536518 10^(-1)) (-1.39170988700743070 10^(-1)) (5.39792481712323080 10^(-1))
               (0.00000000000000000 10^(00)) (1.33475171279176553 10^(-2)) (5.16947115496433351 10^(-2)) (1.18338593246817739 10^(-1)) (1.99488974442547706 10^(-1)) (2.47433444106952810 10^(-1)) (1.76857335792483722 10^(-1)) (-7.73147289209733524 10^(-2)) (-4.03957976370276362 10^(-1)) (-4.26248972480881949 10^(-1)) (0.00000000000000000 10^(00)) (-1.33475171279176553 10^(-2)) (5.16947115496433351 10^(-2)) (-1.18338593246817739 10^(-1)) (1.99488974442547706 10^(-1)) (-2.47433444106952810 10^(-1)) (1.76857335792483722 10^(-1)) (7.73147289209733524 10^(-2)) (-4.03957976370276362 10^(-1)) (4.26248972480881949 10^(-1))
               (7.51973000625467125 10^(-2)) (1.30245544300333221 10^(-1)) (1.63341276003923536 10^(-1)) (1.70526599796504891 10^(-1)) (1.30939192440971686 10^(-1)) (2.03151545067934980 10^(-2)) (-1.63221495163531127 10^(-1)) (-3.58668304344964883 10^(-1)) (-4.27241532923655742 10^(-1)) (-2.57379984592180533 10^(-1)) (-7.51973000625467125 10^(-2)) (1.30245544300333221 10^(-1)) (-1.63341276003923536 10^(-1)) (1.70526599796504891 10^(-1)) (-1.30939192440971686 10^(-1)) (2.03151545067934980 10^(-2)) (1.63221495163531127 10^(-1)) (-3.58668304344964883 10^(-1)) (4.27241532923655742 10^(-1)) (-2.57379984592180533 10^(-1))
               (0.00000000000000000 10^(00)) (1.17970395645446788 10^(-2)) (4.56897377680315353 10^(-2)) (1.06735478516165258 10^(-1)) (1.93328295713620590 10^(-1)) (2.90991615491047739 10^(-1)) (3.66618714800346246 10^(-1)) (3.73047290429373513 10^(-1)) (2.78093697547176333 10^(-1)) (1.15841260276673477 10^(-1)) (0.00000000000000000 10^(00)) (-1.17970395645446788 10^(-2)) (4.56897377680315353 10^(-2)) (-1.06735478516165258 10^(-1)) (1.93328295713620590 10^(-1)) (-2.90991615491047739 10^(-1)) (3.66618714800346246 10^(-1)) (-3.73047290429373513 10^(-1)) (2.78093697547176333 10^(-1)) (-1.15841260276673477 10^(-1))
               (1.11154188252270858 10^(-1)) (1.92524701527008762 10^(-1)) (2.47219185509918865 10^(-1)) (2.86223068194520869 10^(-1)) (3.06988572573322294 10^(-1)) (3.02386479720596069 10^(-1)) (2.65378536168870360 10^(-1)) (1.95946684919057451 10^(-1)) (1.08883370572501789 10^(-1)) (3.43800712548983714 10^(-2)) (-1.11154188252270858 10^(-1)) (1.92524701527008762 10^(-1)) (-2.47219185509918865 10^(-1)) (2.86223068194520869 10^(-1)) (-3.06988572573322294 10^(-1)) (3.02386479720596069 10^(-1)) (-2.65378536168870360 10^(-1)) (1.95946684919057451 10^(-1)) (-1.08883370572501789 10^(-1)) (3.43800712548983714 10^(-2)) ]
    I[\11\]=> [ (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (7.07106781186547462 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.12372435695794470 10^(-1)) (3.53553390593273731 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.84653196881457649 10^(-1)) (1.76776695296636865 10^(-1)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (-5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-2.33853586673371333 10^(-1)) (4.05046293650491274 10^(-1)) (5.22912516583797227 10^(-1)) (8.83883476483184327 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (-3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-1.53093108923948618 10^(-1)) (5.92927061281571133 10^(-1)) (3.50780380010057014 10^(-1)) (4.41941738241592164 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (-1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (-2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (1.46575492494482179 10^(-1)) (-2.53876200144873776 10^(-1)) (1.63876382526586178 10^(-1)) (5.81703452155821421 10^(-1)) (2.19863238741723255 10^(-1)) (2.20970869120796082 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (-4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (-1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (6.89981317681863104 10^(-2)) (-2.67228615257610491 10^(-1)) (4.21585548851001302 10^(-1)) (4.78033079399323602 10^(-1)) (1.32121363478810649 10^(-1)) (1.10485434560398041 10^(-2)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (1.06977062012727761 10^(-1)) (1.85289706650490965 10^(-1)) (1.81798066847188994 10^(-1)) (-5.66069404148024924 10^(-2)) (-5.34885310063638819 10^(-1)) (3.54802775870799780 10^(-1)) (-7.71422564770761626 10^(-2)) (5.52427172801990204 10^(-3)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-1.06977062012727761 10^(-1)) (1.85289706650490965 10^(-1)) (-1.81798066847188994 10^(-1)) (-5.66069404148024924 10^(-2)) (5.34885310063638819 10^(-1)) (3.54802775870799780 10^(-1)) (7.71422564770761626 10^(-2)) (5.52427172801990204 10^(-3)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (3.94511911654768649 10^(-2)) (1.52793806371937069 10^(-1)) (3.01313449619951434 10^(-1)) (2.04994402553155097 10^(-1)) (-5.28802957971468812 10^(-1)) (2.46372609862835601 10^(-1)) (-4.41077726196727124 10^(-2)) (2.76213586400995102 10^(-3)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00)) (-3.94511911654768649 10^(-2)) (1.52793806371937069 10^(-1)) (-3.01313449619951434 10^(-1)) (2.04994402553155097 10^(-1)) (5.28802957971468812 10^(-1)) (2.46372609862835601 10^(-1)) (4.41077726196727124 10^(-2)) (2.76213586400995102 10^(-3)) (0.00000000000000000 10^(00)) (0.00000000000000000 10^(00))
               (-8.42790976968414707 10^(-2)) (-1.45975679226990590 10^(-1)) (-1.61531821313557283 10^(-1)) (-6.37090094933597251 10^(-2)) (2.16717679791878087 10^(-1)) (3.99317349614470185 10^(-1)) (-4.55808912293701407 10^(-1)) (1.63205770906627440 10^(-1)) (-2.48208301311305356 10^(-2)) (1.38106793200497551 10^(-3)) (0.00000000000000000 10^(00)) (8.42790976968414707 10^(-2)) (-1.45975679226990590 10^(-1)) (1.61531821313557283 10^(-1)) (-6.37090094933597251 10^(-2)) (-2.16717679791878087 10^(-1)) (3.99317349614470185 10^(-1)) (4.55808912293701407 10^(-1)) (1.63205770906627440 10^(-1)) (2.48208301311305356 10^(-2)) (1.38106793200497551 10^(-3)) (0.00000000000000000 10^(00))
               (0.00000000000000000 10^(00)) (-2.55777360423999900 10^(-2)) (-9.90621457259043686 10^(-2)) (-2.10503024770429370 10^(-1)) (-2.53153933531557018 10^(-1)) (1.04952076465843151 10^(-2)) (4.90608224764219392 10^(-1)) (-3.59502355151360586 10^(-1)) (1.04378040749120216 10^(-1)) (-1.37934051677983741 10^(-2)) (6.90533966002487756 10^(-4)) (0.00000000000000000 10^(00)) (2.55777360423999900 10^(-2)) (-9.90621457259043686 10^(-2)) (2.10503024770429370 10^(-1)) (-2.53153933531557018 10^(-1)) (-1.04952076465843151 10^(-2)) (4.90608224764219392 10^(-1)) (3.59502355151360586 10^(-1)) (1.04378040749120216 10^(-1)) (1.37934051677983741 10^(-2)) (6.90533966002487756 10^(-4))
               (6.95453840939869034 10^(-2)) (1.20456138682677766 10^(-1)) (1.40697900988298069 10^(-1)) (9.63808429807962025 10^(-2)) (-6.45778566587021235 10^(-2)) (-2.91065835282570684 10^(-1)) (-2.08957873602256261 10^(-1)) (4.93804876402950677 10^(-1)) (-2.66261324079825612 10^(-1)) (6.49588502690164049 10^(-2)) (-7.58802349632078238 10^(-3)) (-6.95453840939869034 10^(-2)) (1.20456138682677766 10^(-1)) (-1.40697900988298069 10^(-1)) (9.63808429807962025 10^(-2)) (6.45778566587021235 10^(-2)) (-2.91065835282570684 10^(-1)) (2.08957873602256261 10^(-1)) (4.93804876402950677 10^(-1)) (2.66261324079825612 10^(-1)) (6.49588502690164049 10^(-2)) (7.58802349632078238 10^(-3))
               (0.00000000000000000 10^(00)) (1.79409066807431142 10^(-2)) (6.94848327903794666 10^(-2)) (1.53012297620643473 10^(-1)) (2.20111480159701112 10^(-1)) (1.43142586615585377 10^(-1)) (-1.80510381278339072 10^(-1)) (-3.71751672089394636 10^(-1)) (4.41314970123832251 10^(-1)) (-1.88126215358685317 10^(-1)) (3.95559811435529790 10^(-2)) (0.00000000000000000 10^(00)) (-1.79409066807431142 10^(-2)) (6.94848327903794666 10^(-2)) (-1.53012297620643473 10^(-1)) (2.20111480159701112 10^(-1)) (-1.43142586615585377 10^(-1)) (-1.80510381278339072 10^(-1)) (3.71751672089394636 10^(-1)) (4.41314970123832251 10^(-1)) (1.88126215358685317 10^(-1)) (3.95559811435529790 10^(-2))
               (5.92363103432655136 10^(-2)) (1.02600299167453682 10^(-1)) (1.23425366129515574 10^(-1)) (1.03296130267200331 10^(-1)) (6.43340478975442179 10^(-3)) (-1.68184087365804286 10^(-1)) (-2.75066440817059277 10^(-1)) (-8.11908042567650347 10^(-3)) (4.55183095357789891 10^(-1)) (-3.63842490854997702 10^(-1)) (1.28189609146893341 10^(-1)) (-5.92363103432655136 10^(-2)) (1.02600299167453682 10^(-1)) (-1.23425366129515574 10^(-1)) (1.03296130267200331 10^(-1)) (-6.43340478975442179 10^(-3)) (-1.68184087365804286 10^(-1)) (2.75066440817059277 10^(-1)) (-8.11908042567650347 10^(-3)) (-4.55183095357789891 10^(-1)) (-3.63842490854997702 10^(-1)) (-1.28189609146893341 10^(-1))
               (0.00000000000000000 10^(00)) (1.33705655534651809 10^(-2)) (5.17839777179451982 10^(-2)) (1.16356419625834262 10^(-1)) (1.82478485662474710 10^(-1)) (1.77734876478498172 10^(-1)) (6.03803797757294057 10^(-3)) (-2.75417777068005853 10^(-1)) (-2.01120294025606938 10^(-1)) (4.70642176902570486 10^(-1)) (-2.84372829253447090 10^(-1)) (0.00000000000000000 10^(00)) (-1.33705655534651809 10^(-2)) (5.17839777179451982 10^(-2)) (-1.16356419625834262 10^(-1)) (1.82478485662474710 10^(-1)) (-1.77734876478498172 10^(-1)) (6.03803797757294057 10^(-3)) (2.75417777068005853 10^(-1)) (-2.01120294025606938 10^(-1)) (-4.70642176902570486 10^(-1)) (-2.84372829253447090 10^(-1))
               (5.35216692036052100 10^(-2)) (9.27022503665387160 10^(-2)) (1.13563582111631145 10^(-1)) (1.05431106363779017 10^(-1)) (4.27057080338058836 10^(-2)) (-8.82457560722657575 10^(-2)) (-2.28716795670387857 10^(-1)) (-1.93890834223618747 10^(-1)) (1.62143135477166356 10^(-1)) (3.65319804536886006 10^(-1)) (-4.53060970710558064 10^(-1)) (-5.35216692036052100 10^(-2)) (9.27022503665387160 10^(-2)) (-1.13563582111631145 10^(-1)) (1.05431106363779017 10^(-1)) (-4.27057080338058836 10^(-2)) (-8.82457560722657575 10^(-2)) (2.28716795670387857 10^(-1)) (-1.93890834223618747 10^(-1)) (-1.62143135477166356 10^(-1)) (3.65319804536886006 10^(-1)) (4.53060970710558064 10^(-1))
               (0.00000000000000000 10^(00)) (1.13991489495187583 10^(-2)) (4.41487140424239172 10^(-2)) (1.00557166842546120 10^(-1)) (1.66342803436241277 10^(-1)) (1.94843109840054735 10^(-1)) (1.08914161690773961 10^(-1)) (-1.24469037296297352 10^(-1)) (-3.19982790793915006 10^(-1)) (-5.39795070473810742 10^(-2)) (5.38068612254463230 10^(-1)) (0.00000000000000000 10^(00)) (-1.13991489495187583 10^(-2)) (4.41487140424239172 10^(-2)) (-1.00557166842546120 10^(-1)) (1.66342803436241277 10^(-1)) (-1.94843109840054735 10^(-1)) (1.08914161690773961 10^(-1)) (1.24469037296297352 10^(-1)) (-3.19982790793915006 10^(-1)) (5.39795070473810742 10^(-2)) (5.38068612254463230 10^(-1))
               (5.81003036574986309 10^(-2)) (1.00632677869967505 10^(-1)) (1.25099551604094861 10^(-1)) (1.25223109819501383 10^(-1)) (8.02359439172549704 10^(-2)) (-2.88090605695263055 10^(-2)) (-1.83611348705344929 10^(-1)) (-2.79057603856599057 10^(-1)) (-1.35124956388181033 10^(-1)) (2.79191283496871556 10^(-1)) (4.90006249842694475 10^(-1)) (-5.81003036574986309 10^(-2)) (1.00632677869967505 10^(-1)) (-1.25099551604094861 10^(-1)) (1.25223109819501383 10^(-1)) (-8.02359439172549704 10^(-2)) (-2.88090605695263055 10^(-2)) (1.83611348705344929 10^(-1)) (-2.79057603856599057 10^(-1)) (1.35124956388181033 10^(-1)) (2.79191283496871556 10^(-1)) (-4.90006249842694475 10^(-1))
               (0.00000000000000000 10^(00)) (1.09203683039434275 10^(-2)) (4.22944045756242296 10^(-2)) (9.76376615575970247 10^(-2)) (1.69706665552446234 10^(-1)) (2.29621252277138310 10^(-1)) (2.20016360616412915 10^(-1)) (7.54144520608128061 10^(-2)) (-2.01599709739908206 10^(-1)) (-4.36954383967810944 10^(-1)) (-3.48376849056570181 10^(-1)) (0.00000000000000000 10^(00)) (-1.09203683039434275 10^(-2)) (4.22944045756242296 10^(-2)) (-9.76376615575970247 10^(-2)) (1.69706665552446234 10^(-1)) (-2.29621252277138310 10^(-1)) (2.20016360616412915 10^(-1)) (-7.54144520608128061 10^(-2)) (-2.01599709739908206 10^(-1)) (4.36954383967810944 10^(-1)) (-3.48376849056570181 10^(-1))
               (7.04498935794742737 10^(-2)) (1.22022795067469880 10^(-1)) (1.54144282832189089 10^(-1)) (1.66358282134883323 10^(-1)) (1.44282391046699932 10^(-1)) (6.86391663509140215 10^(-2)) (-7.06468697561107029 10^(-2)) (-2.49966711292477245 10^(-1)) (-3.90468780131501936 10^(-1)) (-3.81614344777228387 10^(-1)) (-1.93941370348083009 10^(-1)) (-7.04498935794742737 10^(-2)) (1.22022795067469880 10^(-1)) (-1.54144282832189089 10^(-1)) (1.66358282134883323 10^(-1)) (-1.44282391046699932 10^(-1)) (6.86391663509140215 10^(-2)) (7.06468697561107029 10^(-2)) (-2.49966711292477245 10^(-1)) (3.90468780131501936 10^(-1)) (-3.81614344777228387 10^(-1)) (1.93941370348083009 10^(-1))
               (0.00000000000000000 10^(00)) (9.55497517822956159 10^(-3)) (3.70062597387083372 10^(-2)) (8.67236719212111928 10^(-2)) (1.58757326897540935 10^(-1)) (2.45014253055384296 10^(-1)) (3.24949361259582570 10^(-1)) (3.65483819865823845 10^(-1)) (3.32953285490653506 10^(-1)) (2.21520404340856625 10^(-1)) (8.17476669329120081 10^(-2)) (0.00000000000000000 10^(00)) (-9.55497517822956159 10^(-3)) (3.70062597387083372 10^(-2)) (-8.67236719212111928 10^(-2)) (1.58757326897540935 10^(-1)) (-2.45014253055384296 10^(-1)) (3.24949361259582570 10^(-1)) (-3.65483819865823845 10^(-1)) (3.32953285490653506 10^(-1)) (-2.21520404340856625 10^(-1)) (8.17476669329120081 10^(-2))
               (1.03596158798840002 10^(-1)) (1.79433810508564495 10^(-1)) (2.30710206912506183 10^(-1)) (2.68541299016661239 10^(-1)) (2.92062712041121220 10^(-1)) (2.96375682161050480 10^(-1)) (2.75584628986549118 10^(-1)) (2.26878876755555181 10^(-1)) (1.55827356111508858 10^(-1)) (7.97573931637260147 10^(-2)) (2.29395468045778227 10^(-2)) (-1.03596158798840002 10^(-1)) (1.79433810508564495 10^(-1)) (-2.30710206912506183 10^(-1)) (2.68541299016661239 10^(-1)) (-2.92062712041121220 10^(-1)) (2.96375682161050480 10^(-1)) (-2.75584628986549118 10^(-1)) (2.26878876755555181 10^(-1)) (-1.55827356111508858 10^(-1)) (7.97573931637260147 10^(-2)) (-2.29395468045778227 10^(-2)) ]
  end

(* Evaluate the Legendre polynomials up to the given order at x,
   defined on [1,-1].  *)
pn[\nat order\](x:RR64):RR64[order] = do
  res = vector[\RR64,order\]()
  res[0] := 1.0
  if order =/= 1 then
    res[1] := x
    for n <- seq(2#(order-2)) do
      res[n] := n (x res[n-1] - res[n-2])/(n+1) + x res[n-1]
    end
  end
  res
end

phi_norms(i:ZZ32):RR64 = SQRT (2.0 i + 1.0)
(*
phi_norms : RR64[100] =
  vector[\RR64,100\](fn (i:ZZ32) => SQRT (2.0 i + 1.0))
*)

(* Evaluate the shifted, normalized Legendre polys up to the given order at x,
   defined on [0,1]. *)
phi[\nat k\](x:RR64):RR64[k+1] = do
  res = pn[\ k \](2.0 x - 1.0)
  for n <- 0#k do
    res[n] := res[n] phi_norms(n)
  end
  res
end

twoScaleCoeffs[\nat k\]():RR64[2 k, 2 k] = hgVal[\k\]()

(** Gauss-legendre quadrature coefficients.
    We can view points[\i\]() as the roots of phi[\i\]().
    The weights are connected with using these quantities for
      integration (Gauss-Legendre quadrature).
    Both ought to be computable using recurrences; I think
    numerical recipes actually gives the algorithm. *)
gaussLegendre[\nat k\]():(RR64[k],RR64[k]) =
  typecase I[\k\]() of
(*
    I[\1\]=>([ 0.50000000000000000],
             [ 1.00000000000000000])
*)
    I[\2\]=>([ 0.78867513459481287 0.21132486540518713],
             [ 0.50000000000000011 0.50000000000000011])
    I[\3\]=>([ 0.88729833462074170 0.50000000000000000 0.11270166537925830],
             [ 0.27777777777777751 0.44444444444444442 0.27777777777777751])
    I[\4\]=>([ 0.93056815579702623 0.66999052179242813 0.33000947820757187 0.06943184420297371],
             [ 0.17392742256872701 0.32607257743127305 0.32607257743127305 0.17392742256872701])
    I[\5\]=>([ 0.95308992296933193 0.76923465505284150 0.50000000000000000 0.23076534494715845 0.04691007703066802],
             [ 0.11846344252809465 0.23931433524968321 0.28444444444444444 0.23931433524968321 0.11846344252809465])
    I[\6\]=>([ 0.96623475710157603 0.83060469323313224 0.61930959304159849 0.38069040695840156 0.16939530676686776 0.03376524289842397],
             [ 0.08566224618958508 0.18038078652406936 0.23395696728634546 0.23395696728634546 0.18038078652406936 0.08566224618958508])
    I[\7\]=>([ 0.97455395617137930 0.87076559279969723 0.70292257568869854 0.50000000000000000 0.29707742431130141 0.12923440720030277 0.02544604382862070],
             [ 0.06474248308443417 0.13985269574463832 0.19091502525255946 0.20897959183673470 0.19091502525255946 0.13985269574463832 0.06474248308443417])
    I[\8\]=>([ 0.98014492824876809 0.89833323870681336 0.76276620495816450 0.59171732124782495 0.40828267875217511 0.23723379504183550 0.10166676129318664 0.01985507175123191],
             [ 0.05061426814518921 0.11119051722668717 0.15685332293894369 0.18134189168918102 0.18134189168918102 0.15685332293894369 0.11119051722668717 0.05061426814518921])
    I[\9\]=>([ 0.98408011975381304 0.91801555366331788 0.80668571635029518 0.66212671170190451 0.50000000000000000 0.33787328829809554 0.19331428364970482 0.08198444633668206 0.01591988024618696],
             [ 0.04063719418078738 0.09032408034742866 0.13030534820146775 0.15617353852000135 0.16511967750062989 0.15617353852000135 0.13030534820146775 0.09032408034742841 0.04063719418078738])
    I[\10\]=>([ 0.98695326425858587 0.93253168334449232 0.83970478414951222 0.71669769706462361 0.57443716949081558 0.42556283050918442 0.28330230293537639 0.16029521585048778 0.06746831665550773 0.01304673574141413],
              [ 0.03333567215434403 0.07472567457529021 0.10954318125799088 0.13463335965499817 0.14776211235737641 0.14776211235737641 0.13463335965499817 0.10954318125799088 0.07472567457529021 0.03333567215434403])
    I[\11\]=>([ 0.98911432907302843 0.94353129988404771 0.86507600278702468 0.75954806460340585 0.63477157797617245 0.50000000000000000 0.36522842202382755 0.24045193539659410 0.13492399721297532 0.05646870011595234 0.01088567092697151],
              [ 0.02783428355808731 0.06279018473245226 0.09314510546386703 0.11659688229599521 0.13140227225512346 0.13646254338895031 0.13140227225512346 0.11659688229599521 0.09314510546386703 0.06279018473245226 0.02783428355808731])
  end

legtest[\nat n\]():() = do
  (r:RR64[n], w:RR64[n]) = gaussLegendre[\n\]()
  sm : RR64 := 0
  for i <- seq(0#n) do
    println("Legendre_" i "(" r[i] ") = ( " phi[\n + 1\](r[i])[n] " )" )
    sm += w[i]
  end
  println("weight sum = " sm)
end

(** The kTree representation, which takes the place of the grody
    hashmaps in Function1d.  This is a node tree, representing the
    Wavelet-transformed function.

    Parameterized by branching factor k. *)
trait Tree[\ E, nat k \]
    comprises { Node[\E,k\], Leaf[\E,k\] }
  getter asString():String
  map[\F\](f:E->F):Tree[\F,k\]
end

object Node[\ E, nat k \](val : E, children : Tree[\E,k\][k])
           extends { Tree[\E,k\] }
  getter asString():String = do
    s : String := "(" val.asString ";" children[0].asString
    for i <- seq(1#k-1) do
      s := s "|" children[i].asString
    end
    (s ")")
  end
  map[\F\](f:E->F):Node[\F,k\] =
    Node[\F,k\](f(val),
                do a = DefaultArray1[\Tree[\F,k\],k\]()
                   for i <- 0#k do
                     a[i] := children[i].map[\F\](f)
                   end
                   a
                end)
end

node2[\ E \](l:Tree[\E,2\], val:E, r:Tree[\E,2\]) : Node[\E,2\] = do
  a : Tree[\E,2\][2] = [ l r ]
  Node[\E,2\](val,a)
end

object Leaf[\ E, nat k \]() extends { Tree[\E,k\] }
    (* where { E, nat k } singleton only *)
    getter asString():String = "."
    map[\F\](f:E->F):Leaf[\F,k\] = Leaf[\F,k\]()
end

(** And Leaf trees, which are used to represent the uncompressed function *)
trait LeafTree[\ E, nat k \]
  comprises { LNode[\E,k\], LLeaf[\E,k\]}
    getter asString():String
    mapReduce[\R\](join : (R,R)->R, f : E->R) : R
    mapReduce2[\R,S\](join : (R,S,R,S)->(R,S), f : E->(R,S)) : (R,S)
    map[\F\](f:E -> F) : LeafTree[\F,k\]
end

object LNode[\ E, nat k \](children : LeafTree[\E,k\][k])
    extends { LeafTree[\E,k\] }
  getter asString():String = do
    s : String := "(" children[0].asString
    for i <- seq(1#k-1) do
      s := s "|" children[i].asString
    end
    (s ")")
  end
  mapReduce[\R\](join : (R,R)->R, f : E->R) : R = do
    acc : R[k] = DefaultArray1[\R,k\]()
    for i <- 0#k do
      acc[i] := children[i].mapReduce[\R\](join,f)
    end
    r : R := acc[0]
    for i <- seq(1#k-1) do
      r := join(r,acc[i])
    end
    r
  end
  mapReduce2[\R,S\](join : (R,S,R,S)->(R,S), f : E->(R,S)) : (R,S) = do
    acc_R : R[k] = DefaultArray1[\R,k\]()
    acc_S : S[k] = DefaultArray1[\S,k\]()
    for i <- 0#k do
      (a_r, a_s) = children[i].mapReduce2[\R,S\](join,f)
      acc_R[i] := a_r; acc_S[i] := a_s
    end
    r : R := acc_R[0]
    s : S := acc_S[0]
    for i <- seq(1#k-1) do
      (r,s) := join(r,s,acc_R[i],acc_S[i])
    end
    (r,s)
  end
  map[\F\](f:E -> F) : LNode[\F,k\] = do
    acc : LeafTree[\F,k\][k] = DefaultArray1[\LeafTree[\F,k\],k\]()
    for i <- 0#k do
      acc[i] := children[i].map[\F\](f)
    end
    LNode[\F,k\](acc)
  end
end

lnode2[\ E \](l:LeafTree[\E,2\], r:LeafTree[\E,2\]): LNode[\E,2\] = do
  a : LeafTree[\E,2\][2] = [ l r ]
  LNode[\E,2\](a)
end

object LLeaf[\ E, nat k \](val : E)
    extends { LeafTree[\E,k\] }
  getter asString():String = val.asString
  mapReduce[\R\](join : (R,R)->R, f: E->R) : R = f(val)
  mapReduce2[\R,S\](join : (R,S,R,S)->(R,S), f : E->(R,S)) : (R,S) = f(val)
  map[\F\](f:E -> F) : LLeaf[\F,k\] = LLeaf[\F,k\](f(val))
end

lleaf2[\ E \](val : E) = LLeaf[\E,2\](val)

(** A singleton object which is the repository for the vast number of constants
    which are used by the Function type. *)
object FConsts[\nat k\]
              ((* Twoscale coefficients for this choice of k *)
               hg : RR64[2 k, 2 k], hgT : RR64[2 k, 2 k],
               (* Quadrature coefficients for this choice of k *)
               quad_x : RR64[k], quad_w : RR64[k],
               quad_phi : RR64[k,k], quad_phiWT : RR64[k,k],
               quad_phiT : RR64[k,k], rm : RR64[k,k],
               r0 : RR64[k,k], rp : RR64[k,k]
               )
    leaf = Leaf[\RR64[k],2\]()
    z = vector[\RR64, k\](0.0)
end

autorefine : Boolean := true

(* Curried vector scaling function, for use in gaxpy and scale operations *)
mulBy[\nat k\](x:RR64): RR64[k] -> RR64[k] =
    fn (v:RR64[k]) => x v

(** The actual function representation, from 1d.py, except all actual
    initializations has been pulled out into the factory named
    "function" below. *)
object Function[\nat k\]
               (thresh : RR64,        (* Truncation threshold for coeffs *)
                initial_level : ZZ32,
                max_level : ZZ32,
                compressed_ : Boolean, (* Which basis are we in? *)
                s_ : LeafTree[\ RR64[ k ], 2 \],
                d_ : Tree[\ RR64[ k ], 2 \],
                c : FConsts[\k\]      (* Quadrature constants *)
                )

  compressed : Boolean := compressed_
  s : LeafTree[\RR64[k],2\] := s_
  d : Tree[\RR64[k],2\] := d_

  getter asString():String =
    ("thresh = " thresh //
     "initial_level = " initial_level //
     "compressed = " compressed //
     "s = " s.asString //
     "d = " d.asString)

  copy():Function[\k\] =
    Function[\k\](thresh, initial_level, max_level, compressed, s, d, c)

  compress():() =
    if NOT compressed then
      compressLeaf(s0 : RR64[k]):(RR64[k],Tree[\RR64[k],2\]) =
          (s0, c.leaf)
      compressNode(s_l:RR64[k], d_l:Tree[\RR64[k],2\],
                   s_r:RR64[k], d_r:Tree[\RR64[k],2\]
                  ) : (RR64[k],Tree[\RR64[k],2\]) = do
          (s_u, d_u) = split[\k\](c.hg merge[\k\](s_l,s_r))
          (s_u, node2(d_l,d_u,d_r))
      end
      (sv,d0) = s.mapReduce2[\RR64[k],Tree[\RR64[k],2\]\](
                    compressNode, compressLeaf)
      (* atomic do *)
          (compressed,s,d) := (true, lleaf2(sv), d0)
      (* end *)
    end

  reconstruct(ss:RR64[k], dd:Node[\RR64[k],2\]):
             LeafTree[\RR64[k],2\] = do
    (s_l,s_r) = split[\k\](c.hgT merge[\k\](ss,dd.val))
    lnode2(reconstruct(s_l,dd.children[0]),
           reconstruct(s_r,dd.children[1]))
  end
  reconstruct(ss:RR64[k], dd:Leaf[\RR64[k],2\]):
             LeafTree[\RR64[k],2\] = lleaf2(ss)

  reconstruct():() =
    if compressed then
      (compressed,s,d) := (false,reconstruct(s.val,d),c.leaf)
    end

  down_s(s0:RR64[k]):(RR64[k],RR64[k]) =
      split[\k\](c.hgT merge[\k\](s0,c.z))

  mul(n : ZZ32, s_a:RR64[k], s_b:RR64[k]):LLeaf[\RR64[k],2\] = do
      scale = SQRT (2.0^n)
      m = (c.quad_phi s_a) BOXDOT (c.quad_phi s_b)
      lleaf2(scale (c.quad_phiWT m))
    end
  mul(n : ZZ32, a:LLeaf[\RR64[k],2\], b:LLeaf[\RR64[k],2\]):
          LeafTree[\RR64[k],2\] =
      if autorefine AND (n+1 <= max_level) then
          (* We are multiplying two polys of order k-1;
             order of result <= 2(k-1).  Refine one more
             level to reduce error. *)
          (a_l, a_r) = down_s(a.val)
          (b_l, b_r) = down_s(b.val)
          lnode2(mul(n+1,a_l,b_l),mul(n+1,a_r,b_r))
      else
          (* We mustn't refine further. *)
          mul(n,a.val,b.val)
      end
  mul(n : ZZ32, a:LNode[\RR64[k],2\], b:LNode[\RR64[k],2\]):
          LNode[\RR64[k],2\] =
      lnode2(mul(n+1,a.children[0],b.children[0]),
             mul(n+1,a.children[1],b.children[1]))
  mul(n : ZZ32, a:LNode[\RR64[k],2\], b:LLeaf[\RR64[k],2\]):
          LNode[\RR64[k],2\] = do
      (b_l, b_r) = down_s(b.val)
      lnode2(mul(n+1,a.children[0],lleaf2(b_l)),
             mul(n+1,a.children[1],lleaf2(b_r)))
    end
  mul(n : ZZ32, a:LLeaf[\RR64[k],2\], b:LNode[\RR64[k],2\]):
          LNode[\RR64[k],2\] = do
      (a_l, a_r) = down_s(a.val)
      lnode2(mul(n+1,lleaf2(a_l)),b.children[0],
             mul(n+1,lleaf2(a_r)),b.children[1])
    end
  mul(other : Function[\k\]):Function[\k\] = do
      (self.reconstruct(), other.reconstruct())
      r = self.copy()
      r.s := mul(0,self.s,other.s)
      r
    end

  evaluate(x : RR64, mx : RR64, s : LNode[\ RR64[k], 2 \]) : RR64 =
    if x >= 0.5 then
      evaluate(2 x - 1, 2 mx, s.children[1])
    else
      evaluate(2 x, 2 mx, s.children[0])
    end
  evaluate(x : RR64, mx : RR64, s : LLeaf[\ RR64[k], 2 \]) : RR64 =
    (SQRT mx) (s.val phi[\k\](x) )

  apply(x:RR64):RR64 = do
    self.reconstruct()
    evaluate(x,1.0,s)
  end

  normSq():RR64 = do
    (* SQRT Integral f(x)^2 *)
    self.reconstruct()
    s.mapReduce[\RR64\](fn (x,y) => x+y, fn (v) => v v)
  end

  gaxpy(alpha:RR64, x:Node[\RR64[k],2\],
        beta:RR64,  y:Node[\RR64[k],2\]):Node[\RR64[k],2\] =
      node2(gaxpy(alpha, x.children[0], beta, y.children[0]),
            alpha x.val + beta y.val,
            gaxpy(alpha, x.children[0], beta, y.children[0]))
  gaxpy(alpha:RR64, x:Leaf[\RR64[k],2\],
        beta:RR64,  y:Leaf[\RR64[k],2\]):Leaf[\RR64[k],2\] = self
  gaxpy(alpha:RR64, x:Node[\RR64[k],2\],
        beta:RR64,  y:Leaf[\RR64[k],2\]):Node[\RR64[k],2\] =
      x.map[\RR64[k]\](mulBy[\k\](alpha))
  gaxpy(alpha:RR64, x:Leaf[\RR64[k],2\],
        beta:RR64,  y:Node[\RR64[k],2\]):Tree[\RR64[k],2\] =
      y.map[\RR64[k]\](mulBy[\k\](beta))

  gaxpy(alpha:RR64, other:Function[\k\], beta:RR64) : Function[\k\] = do
    (* Both bases are linear; we could in principle implement gaxpy
       equally well in either one.  However, we need to match up
       corresponding nodes, and this is much more easily done in the
       compressed basis---leaves in the uncompressed basis might be at
       any level of the tree, so we have to selectively refine in
       order to match them up.  In the compressed basis we can assume
       the missing nodes are zero.
     *)
    (self.compress(), other.compress())
    res = self.copy()
    (res.s, res.d) := (lleaf2(alpha s.val + beta other.s.val),
                       gaxpy(alpha,self.d,beta,other.d))
    res
  end

  nbox(v:RR64[k]):Tree[\RR64[k],2\] = node2(c.leaf,v,c.leaf)

  makeNeighborTree(l:LLeaf[\RR64[k],2\],
                   t:LLeaf[\RR64[k],2\],
                   r:LLeaf[\RR64[k],2\]):Tree[\RR64[k],2\] =
    node2(c.leaf,t.val,c.leaf)
  makeNeighborTree(l:LLeaf[\RR64[k],2\],
                   t:LNode[\RR64[k],2\],
                   r:LLeaf[\RR64[k],2\]):Tree[\RR64[k],2\] =
    node2(c.leaf,t.val,c.leaf)
  makeNeighborTree(l:LeafTree[\RR64[k],2\],
                   c:LeafTree[\RR64[k],2\],
                   r:LeafTree[\RR64[k],2\]):Tree[\RR64[k],2\] = junk

  diff() : Function[\k\] = do
    (* Differentiate the function; according to original code, this
       corresponds to application of a block tridiagonal matrix.  Need
       adjacent groups of three boxes in order to accomplish this,
       which may require refinement.

       This is probably the trickiest algorithm we require; we want to
       cache information from neighbors so that we don't refine
       subtrees twice or more.

    *)
    self.reconstruct()
    result = self.copy()
    ss = makeNeighborTree(s)
    s = diffNeighborTree(ss)
    ss.neighbors(c.z, diff3)
  end

end



(* Factory to permit constants to be shared. *)
function[\nat k\]
        (thresh : RR64,        (* Truncation threshold for coeffs *)
         f : RR64 -> RR64,     (* Function for quadrature *)
         initial_level : ZZ32,
         max_level : ZZ32) : Function[\ k \] = do
  compressed = false    (* Which basis are we in? *)
  (* Twoscale coefficients for this choice of k *)
  hg:RR64[2 k, 2 k] = twoScaleCoeffs[\k\]()
  hgT = hg.t()
  (* Quadrature coefficients for this choice of k *)
  (quad_x:RR64[k], quad_w:RR64[k]) = gaussLegendre[\k\]()
  quad_phi   = matrix[\RR64,k,k\]()
  quad_phiWT = matrix[\RR64,k,k\]()
  for i <- 0#k do
    p = phi[\k\](quad_x[i])
    for m <- 0#k do
      quad_phi[i,m] := p[m]
      quad_phiWT[m,i] := quad_w[i] p[m]
    end
  end
  quad_phiT = quad_phi.t()
  (* Blocks of the block tridiagonal derivative operator *)
  r0 = matrix[\RR64,k,k\]()
  rp = matrix[\RR64,k,k\]()
  rm = matrix[\RR64,k,k\]()
  for i <- 0#k, j <- 0#k do
      gamma_ij = SQRT ((2 i + 1) (2 j + 1))
      iphase = if even i then 1.0 else -1.0 end
      jphase = if even j then 1.0 else -1.0 end
      Kij = if i <= j then 0.0 elif even (i-j) then 0.0 else 2.0 end
      r0[i,j] :=  0.5 (1.0 - iphase jphase - 2 Kij) gamma_ij
      rm[i,j] :=  0.5 jphase gamma_ij
      rp[i,j] := -0.5 iphase gamma_ij
  end

  c : FConsts[\k\] = FConsts[\k\](
                        hg, hgT,
                        quad_x, quad_w, quad_phi, quad_phiWT, quad_phiT,
                        r0, rm, rp)
  println("c")

  project(level : ZZ32, l : ZZ32) : RR64[ k ] = do
    (s,fv) = (vector[\RR64,k\](), vector[\RR64,k\]())
    h = (0.5)^level
    scale = SQRT h
    for mu <- 0#k do
      x = h (l + c.quad_x[mu])
      fv[mu] := scale f(x)
    end
    (* A bit of refactoring of the original code revealed the result
       was simply the following expression: *)
    c.quad_phiWT fv
  end

  refine(level : ZZ32, l : ZZ32) : LeafTree[\ RR64[ k ], 2 \] = do
    println("refine(" level "," l ")")
    (* project f(x) using quadrature rule for box at level, position l *)

    (s0,s1) = (project(level+1, 2 l), project(level+1, 2 l + 1))


    (d0,d1) = split[\k\](c.hg merge[\k\](s0,s1))  (* in original, s * hgT *)
    if (level >= initial_level AND ||d1|| < thresh) OR
       level >= (max_level - 1) then
      lnode2(lleaf2(s0), lleaf2(s1))
    else
      println("initial_level=" initial_level "; ||d1||=" ||d1||)
      lnode2(refine(level+1,2 l), refine(level+1,2 l + 1))
    end
  end

  s = refine(0,0)
  d = c.leaf

  Function[\ k \](
      thresh, initial_level, max_level, compressed, s, d, c)
end

opr ||[\T extends Number,nat k\] f : Function[\k\] || =
    SQRT (f.normSq())

opr DOT[\T extends Number,nat n,nat m,nat p\](a:Function[\n\],b:Function[\n\]) : Function[\n\] =
    a.mul(b)

opr juxtaposition[\T extends Number,nat n,nat m,nat p\](a:Function[\n\],b:Function[\n\]) : Function[\n\] =
    a.mul(b)

opr DOT[\T extends Number,nat n,nat m,nat p\](a:RR64,b:Function[\n\]) : Function[\n\] = do
  res = b.copy()
  (res.s, res.d) := (b.s.map[\RR64[n]\](mulBy[\n\](a)),
                     b.d.map[\RR64[n]\](mulBy[\n\](a)))
  res
end

opr juxtaposition[\ T extends Number, nat n, nat m, nat p \](a:RR64,b:Function[\n\]) : Function[\n\] = a DOT b

opr DOT[\ T extends Number, nat n,nat m,nat p\](b:Function[\n\], a:RR64) : Function[\n\] = a DOT b

opr juxtaposition[\ T extends Number, nat n, nat m, nat p \](b:Function[\n\],a:RR64) : Function[\n\] = a DOT b

opr +[\ T extends Number, nat n, nat m\](a:Function[\n\], b:Function[\n\]) : Function[\n\] =
    a.gaxpy(1.0,b,1.0)

testMe():() = do
  (*
  v1 : RR64[3] = [ 1.00 2.00 3.00 ]
  v2 : RR64[3] = [ 100 200 300 ]
  v3 = v1 + v2
  println(v3)
  s = v1 v2
  println(s)
  v4 = 3 v1
  println(asString(v4))
  v5 = v1 BOXDOT v2
  println(asString(v5))
  l1 = ||v1||
  println(l1)
  m1 : RR64[3,3] = [ 0.0 5.0 0.0; 7.0 0.0 0.0; 0.0 0.0 11.0 ]
  println(asString(m1 + m1))
  println(asString(m1 v2))
  println(asString(m1 m1))
  println(asString(m1.t()))
  println(asString(m1 m1.t()))
  println(asString(m1.t() v2))
  hg1 : RR64[4,4] = twoScaleCoeffs[\2\]()
  println(asString(hg1))
  pn6 : RR64[6] := pn[\6\](0.5)
  println(asString(pn6))
  phi6 : RR64[6] := phi[\6\](0.75)
  println(asString(phi6))
  legtest[\2\]()
  legtest[\3\]()
  legtest[\4\]()
  legtest[\5\]()
  legtest[\6\]()
  legtest[\7\]()
  *)

  f_test(x:RR64):RR64 = 1.0 / (1.0 + x)
  f : Function[\ 3 \] = function[\ 3 \](0.01,f_test,0,20)
  println("f is computed")
  println(f.c.hg.asString)
  println(f.c.hgT.asString)
  println(f.c.quad_x.asString)
  println(f.c.quad_w.asString)
  println(f.c.quad_phiT.asString)
  println(f.c.quad_phi.asString)
  println(f.c.quad_phiWT.asString)
  println(f.c.r0.asString)
  println(f.c.rm.asString)
  println(f.c.rp.asString)
  f.reconstruct()
  println(f.copy().asString)
  rt2 = SQRT 2.0
  ftv = f_test(rt2-1)
  println(f.apply(rt2-1) " ~" // ftv " =" // (1.0/rt2))
  println( ||f|| ) (* Should also match the above. *)
  f.compress()
  println(f.asString)
  f.reconstruct()
  println(f.asString)
  println(f.apply(rt2-1) " ~" // ftv)
  g_test(x:RR64):RR64 = 2^(-x)
  g : Function[\3\] = function[\3\](0.00001,g_test,0,20)
  gtv = g_test(rt2-1)
  println("Here is G")
  println(g.asString)
  println(g.apply(rt2-1) " ~" // gtv)
  println( ||g|| )
  println("f^2")
  ff = f f
  println(ff.apply(rt2-1) " ~" // (ftv DOT ftv))
  println("g^2")
  gg = g g
  println(gg.apply(rt2-1) " ~" // (gtv DOT gtv))
  println("f g")
  fg = f g
  println(fg.apply(rt2-1) " ~" // (ftv DOT gtv))
  println("f SQRT 2")
  f.reconstruct()
  rt2f = rt2 f
  f.compress()
  rt2fr = rt2 f
  println(rt2f.apply(rt2-1) " ~" // rt2fr.apply(rt2-1) " ~" // (rt2 ftv))
  println("f + g")
  fpg = f + g
  println(fpg.apply(rt2-1) " ~" // (ftv + gtv))
end

run():() = do
  testMe()
end

end
