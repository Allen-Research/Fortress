(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component ExceptionScoping
export Executable

run():() = do
    try
        throw NotFound
        fail("After throw NotFound")
    catch x
        NotFound => println("First exception")
    end
    try
        throw NotFound
        fail("After throw NotFound 2")
    catch x
        NotFound => println("OK, binding overlap did not occur.")
    end
    finallyCount : ZZ32 := 0
    try
        try
            Nothing[\ZZ32\].get
        catch x
            FailCalled => fail("Caught FailCalled!!")
        finally
            finallyCount += 1
        end
        fail("Fell through first catch!")
    catch x
        NotFound => println("OK: Caught unjustNothing.")
    finally
        finallyCount += 1
    end
    assert(finallyCount,2,"finallyCount is wrong.")
    println("OK!")
end

end
