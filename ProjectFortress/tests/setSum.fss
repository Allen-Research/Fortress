(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component setSum
import Set.{...}
import List.{...}
export Executable

run() = do
    gg = <| -n : n | n <- 0:4 |>
    outa = BIG ||| <| n^2 | n <- -4:4 |>
    assert(outa,"16 9 4 1 0 1 4 9 16")
    outb = BIG ||| { n^2 | n <- -4:4 }
    assert(outb,"0 1 4 9 16")
    oute = SUM[\Number\][ g <- gg ] SUM[ n <- g ] n^2
    assert(oute,100)
    outc = SUM[\Number\] <|[\Number\] SUM <| n^2 | n <- g |> | g <- gg |>
    assert(outc,100)
    outd = SUM[\Number\] {[\Number\] SUM { n^2 | n <- g } | g <- gg }
    assert(outd,50)
    out1 = BIG ||| <| BIG ||| <| n^2 | n <- g |> | g <- gg |>
    assert(out1,"0 1 0 1 4 1 0 1 4 9 4 1 0 1 4 9 16 9 4 1 0 1 4 9 16")
    out2 = BIG ||| { BIG ||| { n^2 | n <- g } | g <- gg }
    assert(out2,"0 0 1 0 1 4 0 1 4 9 0 1 4 9 16")
  end

end
