(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component spuriousSelf
export Executable

(* For some reason we are unable to resolve an implicit self reference in
   this code.  The key method here is gen() in List.  We get:

 @"not_passing_yet/spuriousSelf.fss",40:13~21: undefined variable generate
Context:
	 @"not_passing_yet/spuriousSelf.fss",40:13~21
	 @"not_passing_yet/spuriousSelf.fss",63:12~19
	at com.sun.fortress.interpreter.evaluator.ProgramError.error(ProgramError.java:94)
	at com.sun.fortress.interpreter.evaluator.Evaluator.forVarRef(Evaluator.java:1387)
        ...
*)

trait List[\E\] extends { Indexed[\E,ZZ32\] } excludes { Number, HasRank }
  getter bounds(): Range[\ZZ32\] = 0#self.size

  (*************************************************************
   * Replacing generate by self.generate below succeeds
   *************************************************************)
  gen(): E = generate[\Boolean\](AndReduction,fn (e) => true)
end

(** Vararg factory for lists; provides aggregate list constants *)
opr <|[\E\] xs: E... |>: List[\E\] = fromArray(xs)

fromArray[\E, nat n\](f: ReadableArray1[\E,0,n\]): Alr[\E,n\] =
    Alr[\E,n\]( f, 0, n )

value object Alr[\E,nat maxUn\]( underlying : ReadableArray1[\E,0,maxUn\],
                                 firstUsed:ZZ32, firstUnused:ZZ32)
      extends { List[\E\], DelegatedIndexed[\E, ZZ32\]}
  getter size(): ZZ32 = |self|
  getter isEmpty(): Boolean = firstUnused <= firstUsed
  getter generator(): Generator[\E\] =
      (firstUsed # |self|).map[\E\](fn (i:ZZ32):E => underlying.get(i))
  opr |self| : ZZ32 = firstUnused - firstUsed

  opr[_:ZZ32]: E = fail("[] irrelevant")
  opr[_:Range[\ZZ32\]]: List[\E\] = fail("[..#..] irrelevant")
end

run():() = do
    u = ((37 + 5) = 14)
    c : List[\ZZ32\] = <| 1 asif ZZ32,2,3,4,5,6 |>
    println(c.gen())
  end

end
