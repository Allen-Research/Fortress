(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component CovariantTest
import List.{...}
export Executable

run():() = do
    samples : List[\ZZ32\] = <|0 asif ZZ32,1,2,7,11|>
    body(x:ZZ32): Number =
        if x MOD 2 = 0 then x else 1.0 x end

    samples1 : List[\ZZ32\] = <|[\ZZ32\] x | x <- samples |>
    list1 : List[\ZZ32\] = list(samples1)
    for (i,j) <- list1.zip[\ZZ32\](samples) do
        assert(i,j,"Not the same in ", list1, " and ", samples)
    end

    cv2(x): AnyList = <| body(y) | y <- <|x|> |>
    samples2 : List[\RR64\] = <| y | x <- samples, y <- cv2(x) |>
    list2 : List[\RR64\] = list(samples2)
    for (i,j) <- list1.zip[\RR64\](list2) do
        assert(i,j,"Not the same in ", list1, " and ", list2)
    end

  end

end
