(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component objectCC
export Executable

trait T
    x():ZZ32
    y():ZZ32
end

topFunc(top:ZZ32):T = object extends T
    x():ZZ32 = top
    y():ZZ32 = x() + 1
    end

object O(v:ZZ32)
    (tmp, tmp2):(ZZ32,ZZ32) = (2,3)
    foo():ZZ32 = v
    bar():T = do
                enclosing:O = self
                object extends T
                    x():ZZ32 = quack(enclosing, 3)
                    y():ZZ32 = local() + tmp
                end
            end
    quack(self, t:ZZ32):ZZ32 = self.v
    local():ZZ32 = v
end

run():() = do
    var top:ZZ32 = 7
    obj:T = topFunc(top)
    assert(top, obj.x(), "obj.x() failed.")
    assert(top + 1, obj.y(), "obj.y() failed.")

    o1:O = O(3);
    o2:T = o1.bar()

    assert( quack(o1, o1.tmp), o2.x(), "o2.x() failed" )
    assert( o1.v, o2.y() - 2, "o2.y() failed" )

    println ("Testing object closure conversion for immutable " ||
            "varRefs and fnRefs: passed.")
end

end
