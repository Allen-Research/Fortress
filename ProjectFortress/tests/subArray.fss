(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component subArray
export Executable

eqToRange(a:Array[\ZZ32,ZZ32\], b:Range[\ZZ32\]):() = do
    assert(|a|, |b|, "Size mismatch",a,b)
    lo = b.left.get - a.bounds.lower
    s = b.stride
    for (i,v) <- a.indexValuePairs do
        assert(s i + lo, v, "a[", i, "]", a, b)
    end
  end

eqToRange2(a:Array[\ZZ32,(ZZ32,ZZ32)\], b:Range[\(ZZ32,ZZ32)\]): () = do
    assert(|a|, |b|, "Size mismatch",a,b)
    (lo1, lo2) = b.lower
    for (i,v) <- a.indexValuePairs do
      (x,y) = i
      assert(v, 3 (x + lo1) + y + lo2, "a[",x,",",y,"]")
    end
  end

eqToRange3(a:Array[\ZZ32,(ZZ32,ZZ32,ZZ32)\], b:Range[\(ZZ32,ZZ32,ZZ32)\]): () = do
    assert(|a|, |b|, "Size mismatch",a,b)
    (lo1, lo2, lo3) = b.lower
    for (i,v) <- a.indexValuePairs do
      (x,y,z) = i
      assert(v, 2 (2 (z + lo3) + x + lo1) + y + lo2, "a[",x,",",y,",",z,"]",a,b)
    end
  end

run():()=do
    a : ZZ32[11] = [ 0 1 2 3 4 5 6 7 8 9 10 ]
    eqToRange(a, 0:10)
    b = a[0#5]
    eqToRange(b, 0#5)
    c = a[6#5]
    eqToRange(c, 6#5)
    eqToRange(c[2#3], 8#3)
    eqToRange(a[5#3], 5#3)
    eqToRange(a[2:7], 2:7)
    eqToRange(a[#], 0:10)
    eqToRange(a[3:], 3:10)
    eqToRange(a[3#], 3:10)
    eqToRange(a[#3], 0#3)
    eqToRange(a[:3], 0:3)
    eqToRange(a[0:9:3],0:9:3)
    eqToRange(a[::3],0:9:3)
    ash = a.shift(5)
    eqToRange(ash, 0:10)
    b[#] := c
    eqToRange(c, 6#5)
    eqToRange(b, 6#5)
    eqToRange(a[0#5], 6#5)
    eqToRange(a[5#6], 5#6)
    eqToRange(ash[5#5], 6#5)
    eqToRange(ash[10#6], 5#6)

    a2 : ZZ32[3,3] = [0 1 2 ; 3 4 5; 6 7 8]
    eqToRange2(a2,a2.indices)
    eqToRange2(a2[#],a2.indices)
    a2' = a2[(0,1)#(2,2)] (*'*)
    eqToRange2(a2',(0,1)#(2,2)) (*'*)
    eqToRange2(a2'[(1,1):],(1,2)#(1,1)) (*'*)
    eqToRange2(((a2.t())[(1,0)#(2,2)]).t(), (0,1)#(2,2))
    eqToRange2(a2[#(2,3)],(0,0)#(2,3))
    eqToRange2(a2[:(1,2)],(0,0):(1,2))
    eqToRange2(a2[(2,1):],(2,1):(2,2))
    eqToRange2(a2[(2,1)#],(2,1):(2,2))
    eqToRange(a2[1,:],(3:5))
    eqToRange(a2[:,2],(2:8:3))
(*
    eqToRange(a2[1,1:],(4:5))
    eqToRange(a2[#2,1],(1:4:3))
*)

    a3 : ZZ32[2,2,2] = [0 1; 2 3;; 4 5 ; 6 7]
    eqToRange3(a3,a3.indices)
    eqToRange3(a3[:],a3.indices)
    eqToRange3(a3[(0,0,1)#(2,1,1)],(0,0,1)#(2,1,1))
    eqToRange3(a3[#(2,1,2)],(0,0,0)#(2,1,2))
    eqToRange3(a3[:(1,0,1)],(0,0,0):(1,0,1))
    eqToRange3(a3[(1,0,1):],(1,0,1):(1,1,1))
    eqToRange3(a3[(1,0,1)#],(1,0,1):(1,1,1))
  end

end
