(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component doubledOverloading
export Executable

(*

Under certain circumstances the same overloading gets inserted
twice into the table of overloadings for a functional method.  This
seems to happen when:

1) A parametric trait (NOT an object) contains a functional method.

2) That trait in turn is mentioned in the type of two or more
overloaded top-level functions.

*)

(* A must be parametric.
   A must be a trait, not an object. *)
trait A[\T\]
  (* f must be a functional method or the bug doesn't manifest. *)
  f(self):Boolean = true
end

(* a must be overloaded.  The second overloading doesn't seem to matter. *)
a[\E\](v: E): A[\E\] = fail("a(v)")
a(): () = fail("a()")

(* b must be overloaded.  Again, second overloading doesn't matter. *)
b[\F\](v: F): A[\F\] = fail("b(v)")
b(): () = fail("b()")

run(): () = do
  println("OK, accepted statically.")
end

end
