(*******************************************************************************
    Copyright 2011, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

export Executable

(*

 Attempt at a generic of union types resulting in similarly
 named methods with union interiors.

 *)

trait X excludes Z
  xmethod() = "PA"
end

trait Z excludes X
  zmethod() = " Z FAIL "
end

object A[\ T extends X,  V extends Z\] (x1:T, x2:T,  z1:V, z2:V)
  f(t:T) = t.xmethod()
  f(v:V) = v.zmethod()
  f(o:Object) = " f Object FAIL "
end

object O1 extends X end
object O2 extends X
  xmethod() = " O2 FAIL "
end
object P1 extends Z 
  zmethod() = " P1 FAIL "
end
object P2 extends Z
  zmethod() = "SS"
end

(*) aiming for T=union(O1,O2), V=union(P1,P2)
 
run() = do
  tricksy = A(O1, O2, P1, P2)
  o:Object = O1
  p:Object = P2
  println(tricksy.f(O1) || tricksy.f(P2) ) (*) "PASS", if we're lucky
  println(tricksy.f(o) || tricksy.f(p) ) (*) "PASS", if we're lucky
end
