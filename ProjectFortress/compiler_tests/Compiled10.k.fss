(********************************************************************************
    Copyright 2009,2010, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

********************************************************************************)
export Executable

(* (2) Modification to syntax of `comprises` clauses. *)

(*  b) For each trait T
 *     for each naked type variable V in T's comprises clause
 *     the instance of T by using all its static parameter names as
 *     corresponding static arguments to the trait is implicitly
 *     regarded as one of the bounds on that static parameter V
 *     (in addition to any other bounds it might have).
 *)
trait T[\U\] comprises U
  g(self, x:T[\U\], y:U, z:Q) = do
    h(self) (* Yes *)
    i(self) (* Yes *)
    j(self) (* Yes *)
    k(self) (* No *)
    h(x)    (* No *)
    i(x)    (* Yes *)
    j(x)    (* No *)
    k(x)    (* No *)
    h(y)    (* Yes *)
    i(y)    (* Yes *)
    j(y)    (* Yes *)
    k(y)    (* No *)
    h(z)    (* No *)
    i(z)    (* No *)
    j(z)    (* No *)
    k(z)    (* Yes *)
  end
  h(self) = ()
  i(x:T[\U\]) = ()
  j(x:U) = ()
  k(x:Q) = ()
end
object Q extends T[\Q\] end

run() = ()
