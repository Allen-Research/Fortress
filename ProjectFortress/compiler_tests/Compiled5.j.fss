(*******************************************************************************
    Copyright 2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

import CompilerSystem.args
export { Executable }

trait A extends Object comprises {At,C} end
trait B extends Object comprises {Bt,C} end
trait C extends {A,B} end
trait At extends A end
trait Bt extends B end

f(o:Object):String = "Object"
f(a:A):String = "A"
f(b:B):String = "B"
f(c:C):String = "C"

object A1 extends At end
object B1 extends Bt end
object C1 extends C end

run(): () = do
  println f(A1)
  println f(B1)
  println f(C1)
end
