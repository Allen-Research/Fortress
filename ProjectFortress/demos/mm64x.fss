(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component mm64x
export Executable

MA32(a:ZZ32[32,32],b:ZZ32[32,32]):ZZ32[32,32] = do
   var result:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()
   for i<-0#32 do
      for j<-0#32 do
         result[i,j] := a[i,j] + b[i,j]
      end
   end
   result
end

MA16(a:ZZ32[16,16],b:ZZ32[16,16]):ZZ32[16,16] = do
   var result:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()
   for i<-0#16 do
      for j<-0#16 do
         result[i,j] := a[i,j] + b[i,j]
      end
   end
   result
end

MA8(a:ZZ32[8,8],b:ZZ32[8,8]):ZZ32[8,8] = do
   var result:ZZ32[8,8] =  matrix[\ZZ32, 8, 8\]()
   for i<-0#8 do
      for j<-0#8 do
         result[i,j] := a[i,j] + b[i,j]
      end
   end
   result
end

MA4(a:ZZ32[4,4],b:ZZ32[4,4]):ZZ32[4,4] = do
   var result:ZZ32[4,4] = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   for i<-0#4 do
      for j<-0#4 do
      result[i,j] := a[i,j] + b[i,j]
      end
   end
   result
end

MA2(a:ZZ32[2,2],b:ZZ32[2,2]):ZZ32[2,2] = do
   var result:ZZ32[2,2] = [0 0; 0 0]
   for i<-0#2 do
      for j<-0#2 do
      result[i,j] := a[i,j] + b[i,j]
   end
end
result
end

MM64(a:ZZ32[64,64],b:ZZ32[64,64]):ZZ32[64,64] = do
   var A00:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()
   var A01:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()
   var A10:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()
   var A11:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()
   var B00:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()
   var B01:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()
   var B10:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()
   var B11:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()

  for i<-0#32 do
      for j<-0#32 do
         A00[i,j] := a[i,j]
         B00[i,j] := b[i,j]
      end
   end
   for i<-0#32 do
      for j<-32#32 do
         A01[i,j-32] := a[i,j]
         B01[i,j-32] := b[i,j]
      end
   end
   for i<-32#32 do
      for j<-0#32 do
         A10[i-32,j] := a[i,j]
         B10[i-32,j] := b[i,j]
      end
   end
   for i<-32#32 do
      for j<-32#32 do
         A11[i-32,j-32] := a[i,j]
         B11[i-32,j-32] := b[i,j]
      end
   end
   (P0,P1,P2,P3,P4,P5,P6,P7) = (MM32(A00,B00),MM32(A01,B10),MM32(A00,B01),
                                MM32(A01,B11),MM32(A10,B11),MM32(A11,B10),
                                MM32(A10,B01),MM32(A11,B11))

   (C00,C01,C10,C11) = (MA32(P0,P1),MA32(P2,P3),MA32(P4,P5),MA32(P6,P7))

   var c:ZZ32[64,64] = matrix[\ZZ32, 64, 64\]()

   for i<-0#32 do
      for j<-0#32 do
         c[i,j] := C00[i,j]
      end
   end
   for i<-32#32 do
      for j<-0#32 do
         c[i,j] := C10[i-32,j]
      end
   end
   for i<-0#32 do
      for j<-32#32 do
         c[i,j] := C01[i,j-32]
      end
   end
   for i<-32#32 do
      for j<-32#32 do
         c[i,j] := C11[i-32,j-32]
      end
   end
   c
end

MM32(a:ZZ32[32,32],b:ZZ32[32,32]):ZZ32[32,32] = do
   var A00:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()
   var A01:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()
   var A10:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()
   var A11:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()
   var B00:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()
   var B01:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()
   var B10:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()
   var B11:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()

  for i<-0#16 do
      for j<-0#16 do
         A00[i,j] := a[i,j]
         B00[i,j] := b[i,j]
      end
   end
   for i<-0#16 do
      for j<-16#16 do
         A01[i,j-16] := a[i,j]
         B01[i,j-16] := b[i,j]
      end
   end
   for i<-16#16 do
      for j<-0#16 do
         A10[i-16,j] := a[i,j]
         B10[i-16,j] := b[i,j]
      end
   end
   for i<-16#16 do
      for j<-16#16 do
         A11[i-16,j-16] := a[i,j]
         B11[i-16,j-16] := b[i,j]
      end
   end
   (P0,P1,P2,P3,P4,P5,P6,P7) = (MM16(A00,B00),MM16(A01,B10),MM16(A00,B01),
                                MM16(A01,B11),MM16(A10,B11),MM16(A11,B10),
                                MM16(A10,B01),MM16(A11,B11))

   (C00,C01,C10,C11) = (MA16(P0,P1),MA16(P2,P3),MA16(P4,P5),MA16(P6,P7))

   var c:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]()
   for i<-0#16 do
      for j<-0#16 do
         c[i,j] := C00[i,j]
      end
   end
   for i<-16#16 do
      for j<-0#16 do
         c[i,j] := C10[i-16,j]
      end
   end
   for i<-0#16 do
      for j<-16#16 do
         c[i,j] := C01[i,j-16]
      end
   end
   for i<-16#16 do
      for j<-16#16 do
         c[i,j] := C11[i-16,j-16]
      end
   end
   c
end


MM16(a:ZZ32[16,16],b:ZZ32[16,16]):ZZ32[16,16] = do
   var A00:ZZ32[8,8] = [0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0]
   var A01:ZZ32[8,8] = [0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0]
   var A10:ZZ32[8,8] = [0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0]
   var A11:ZZ32[8,8] = [0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0]
   var B00:ZZ32[8,8] = [0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0]
   var B01:ZZ32[8,8] = [0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0]
   var B10:ZZ32[8,8] = [0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0]
   var B11:ZZ32[8,8] = [0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                        0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0]
  for i<-0#8 do
      for j<-0#8 do
         A00[i,j] := a[i,j]
         B00[i,j] := b[i,j]
      end
   end
   for i<-0#8 do
      for j<-8#8 do
         A01[i,j-8] := a[i,j]
         B01[i,j-8] := b[i,j]
      end
   end
   for i<-8#8 do
      for j<-0#8 do
         A10[i-8,j] := a[i,j]
         B10[i-8,j] := b[i,j]
      end
   end
   for i<-8#8 do
      for j<-8#8 do
         A11[i-8,j-8] := a[i,j]
         B11[i-8,j-8] := b[i,j]
      end
   end
   (P0,P1,P2,P3,P4,P5,P6,P7) = (MM8(A00,B00),MM8(A01,B10),MM8(A00,B01),
                                MM8(A01,B11),MM8(A10,B11),MM8(A11,B10),
                                MM8(A10,B01),MM8(A11,B11))

   (C00,C01,C10,C11) = (MA8(P0,P1),MA8(P2,P3),MA8(P4,P5),MA8(P6,P7))

   var c:ZZ32[16,16] = matrix[\ZZ32, 16, 16\]()
   for i<-0#8 do
      for j<-0#8 do
         c[i,j] := C00[i,j]
      end
   end
   for i<-8#8 do
      for j<-0#8 do
         c[i,j] := C10[i-8,j]
      end
   end
   for i<-0#8 do
      for j<-8#8 do
         c[i,j] := C01[i,j-8]
      end
   end
   for i<-8#8 do
      for j<-8#8 do
         c[i,j] := C11[i-8,j-8]
      end
   end
   c
end

MM8(a:ZZ32[8,8],b:ZZ32[8,8]):ZZ32[8,8] = do
   var A00:ZZ32[4,4] = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   var A01:ZZ32[4,4] = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   var A10:ZZ32[4,4] = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   var A11:ZZ32[4,4] = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   var B00:ZZ32[4,4] = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   var B01:ZZ32[4,4] = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   var B10:ZZ32[4,4] = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   var B11:ZZ32[4,4] = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   for i<-0#4 do
      for j<-0#4 do
         A00[i,j] := a[i,j]
         B00[i,j] := b[i,j]
      end
   end
   for i<-0#4 do
      for j<-4#4 do
         A01[i,j-4] := a[i,j]
         B01[i,j-4] := b[i,j]
      end
   end
   for i<-4#4 do
      for j<-0#4 do
         A10[i-4,j] := a[i,j]
         B10[i-4,j] := b[i,j]
      end
   end
   for i<-4#4 do
      for j<-4#4 do
         A11[i-4,j-4] := a[i,j]
         B11[i-4,j-4] := b[i,j]
      end
   end
   (P0,P1,P2,P3,P4,P5,P6,P7) = ( MM4(A00,B00),
                                 MM4(A01,B10),
                                 MM4(A00,B01),
                                 MM4(A01,B11),
                                 MM4(A10,B11),
                                 MM4(A11,B10),
                                 MM4(A10,B01),
                                 MM4(A11,B11))
   (C00,C01,C10,C11) = (MA4(P0,P1),MA4(P2,P3),MA4(P4,P5),MA4(P6,P7))
   var c:ZZ32[8,8] = [0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                      0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                      0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0;
                      0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0]
   for i<-0#4 do
      for j<-0#4 do
         c[i,j] := C00[i,j]
      end
   end
   for i<-4#4 do
      for j<-0#4 do
         c[i,j] := C10[i-4,j]
      end
   end
   for i<-0#4 do
      for j<-4#4 do
         c[i,j] := C01[i,j-4]
      end
   end
   for i<-4#4 do
      for j<-4#4 do
         c[i,j] := C11[i-4,j-4]
      end
   end
   c
end

MM4(a:ZZ32[4,4],b:ZZ32[4,4]):ZZ32[4,4] = do
   var A00:ZZ32[2,2] = [0 0; 0 0]
   var A01:ZZ32[2,2] = [0 0; 0 0]
   var A10:ZZ32[2,2] = [0 0; 0 0]
   var A11:ZZ32[2,2] = [0 0; 0 0]
   var B00:ZZ32[2,2] = [0 0; 0 0]
   var B01:ZZ32[2,2] = [0 0; 0 0]
   var B10:ZZ32[2,2] = [0 0; 0 0]
   var B11:ZZ32[2,2] = [0 0; 0 0]

   for i<-0#2 do
      for j<-0#2 do
         A00[i,j] := a[i,j]
         B00[i,j] := b[i,j]
      end
   end

   for i<-0#2 do
      for j<-2#2 do
         A01[i,j-2] := a[i,j]
         B01[i,j-2] := b[i,j]
      end
   end

   for i<-2#2 do
      for j<-0#2 do
         A10[i-2,j] := a[i,j]
         B10[i-2,j] := b[i,j]
      end
   end

   for i<-2#2 do
      for j<-2#2 do
         A11[i-2,j-2] := a[i,j]
         B11[i-2,j-2] := b[i,j]
      end
   end
   (P0,P1,P2,P3,P4,P5,P6,P7) = (MM2(A00,B00),
                                MM2(A01,B10),
                                MM2(A00,B01),
                                MM2(A01,B11),
                                MM2(A10,B00),
                                MM2(A11,B10),
                                MM2(A10,B01),
                                MM2(A11,B11))
   (C00,C01,C10,C11) = (MA2(P0,P1),MA2(P2,P3),MA2(P4,P5),MA2(P6,P7))
   c:ZZ32[4,4] = [ 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0]
   for i<-0#2 do
      for j<-0#2 do
         c[i,j] := C00[i,j]
      end
   end
   for i<-2#2 do
      for j<-0#2 do
         c[i,j] := C10[i-2,j]
      end
   end
   for i<-0#2 do
      for j<-2#2 do
         c[i,j] := C01[i,j-2]
      end
   end
   for i<-2#2 do
      for j<-2#2 do
         c[i,j] := C11[i-2,j-2]
      end
   end
   c
end


MM2(a:ZZ32[2,2],b:ZZ32[2,2]):ZZ32[2,2] = do
   A00:ZZ32 = a[0,0]
   A01:ZZ32 = a[0,1]
   A10:ZZ32 = a[1,0]
   A11:ZZ32 = a[1,1]
   B00:ZZ32 = b[0,0]
   B01:ZZ32 = b[0,1]
   B10:ZZ32 = b[1,0]
   B11:ZZ32 = b[1,1]

   (P0,P1,P2,P3,P4,P5,P6,P7) = (A00 B00,
                                A01 B10,
                                A00 B01,
                                A01 B11,
                                A10 B00,
                                A11 B10,
                                A10 B01,
                                A11 B11)
   (C00,C01,C10,C11) = (P0+P1,P2+P3,P4+P5,P6+P7)
   c:ZZ32[2,2] = [C00 C01;
                  C10 C11]
   c
end

run():()=do
   var a:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]() (* all 9 *)
   for i <- 0#32 do for j <- 0#32 do
     a[i,j] := 1
     end end
   var b:ZZ32[32,32] = matrix[\ZZ32, 32, 32\]() (* all 1 *)
   for i <- 0#32 do for j <- 0#32 do
     b[i,j] := 9
   end end

println("Starting parallel MM")
   recordTime(6)
   MM32(a,b)
   printTime(6)
end
end
