(*******************************************************************************
    Copyright 2008,2009, Oracle and/or its affiliates.
    All rights reserved.


    Use is subject to license terms.

    This distribution may include materials developed by third parties.

 ******************************************************************************)

component extendOprWithParam
export Executable

trait Monoidish[\ T, opr OPLUS \]
  where { T extends Monoidish[\ T, OPLUS \] }
    ident() : T
    opr OPLUS(self, other:T):T = do println("FAIL"); self end
end

object Chicken[\T\](x:T) extends Monoidish[\ Chicken[\T\], EGG \]
  opr EGG(self, other:Chicken[\T\]):Chicken[\T\] = other
  ident() = Chicken[\T\](0)
  holds(y:T) = do println("OK"); (x=y) end
end

run():() =
  assert( (Chicken[\ZZ32\](3) EGG Chicken[\ZZ32\](7)).holds(7),"Doesn't hold 7")

end
